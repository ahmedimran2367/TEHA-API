{
  "EmailTemplate": {
    "type": "EmailTemplate",
    "items": [
      {
        "Id": 1,
        "Code": "ETUSER",
        "Name": "Offer Request",
        "Type": "Email Template",
        "Subject": "order",
        "Body": "request",
        "Fields": [
          {
            "Id": 0,
            "Name": "first"
          }
        ],
        "ActiveInd": true
      },
      {
        "Id": 2,
        "Code": "ETUSER",
        "Name": "Plumbing Request 42",
        "Type": "EmailTemplate",
        "Subject": "Order Request 67",
        "Body": "order Body",
        "Fields": [
          {
            "Id": 0,
            "Name": "first field"
          }
        ],
        "ActiveInd": true
      },
      {
        "Id": 3,
        "Code": "ETsadasUSER",
        "Name": "new name",
        "Type": "EmailTemplate",
        "Subject": "Plumbing Request",
        "Body": "this is a request",
        "Fields": [
          {
            "Id": 0,
            "Name": "first field"
          }
        ],
        "ActiveInd": true
      }
    ]
  },
  "LookUp": {
    "type": "LookUp",
    "items": []
  },
  "Language": {
    "type": "Language",
    "items": [
      {
        "Id": 1,
        "Code": "Welcome",
        "Type": "Language",
        "English": "Welcome to the Customer Portal",
        "German": "Willkommen im TEHA Kundenportal",
        "Category": "Account"
      },
      {
        "Id": 2,
        "Code": "SignIn",
        "Type": "Language",
        "English": "Sign In",
        "German": "Login",
        "Category": "Account"
      },
      {
        "Id": 3,
        "Code": "Username",
        "Type": "Language",
        "English": "User name",
        "German": "Nutzername",
        "Category": "Account"
      },
      {
        "Id": 4,
        "Code": "Password",
        "Type": "Language",
        "English": "Password",
        "German": "Passwort",
        "Category": "Account"
      },
      {
        "Id": 5,
        "Code": "ForgotPassword",
        "Type": "Language",
        "English": "ForgotPassword?",
        "German": "Passwort vergessen?",
        "Category": "Account"
      },
      {
        "Id": 6,
        "Code": "NotAuser",
        "Type": "Language",
        "English": "Not a user?",
        "German": "Kein Benutzer?",
        "Category": "Account"
      },
      {
        "Id": 7,
        "Code": "GetInTouch",
        "Type": "Language",
        "English": "Get in touch",
        "German": "Treten Sie in Kontakt",
        "Category": "Account"
      },
      {
        "Id": 8,
        "Code": "Login",
        "Type": "Language",
        "English": "Login",
        "German": "Einloggen",
        "Category": "Account"
      },
      {
        "Id": 9,
        "Code": "LabelHeading",
        "Type": "Language",
        "English": "Code",
        "German": "Passwort",
        "Category": "Home"
      },
      {
        "Id": 10,
        "Code": "TehaLgNo",
        "Type": "Language",
        "English": "TEHA LG No.",
        "German": "TEHA LG Nr.",
        "Category": "StockOverview"
      },
      {
        "Id": 11,
        "Code": "AdminLgNo",
        "Type": "Language",
        "English": "Admin LG No.",
        "German": "Admin LG Nr.",
        "Category": "StockOverview"
      },
      {
        "Id": 12,
        "Code": "RwmStatus",
        "Type": "Language",
        "English": "RWM Status",
        "German": "RWM Status",
        "Category": "StockOverview"
      },
      {
        "Id": 13,
        "Code": "AccountingPeriod",
        "Type": "Language",
        "English": "Accounting Period",
        "German": "Abrechnungs - zeitraum",
        "Category": "StockOverview"
      },
      {
        "Id": 14,
        "Code": "AccountingStatus",
        "Type": "Language",
        "English": "Accounting Status",
        "German": "Abrechnungs - status",
        "Category": "StockOverview"
      },
      {
        "Id": 15,
        "Code": "ReadingStatus",
        "Type": "Language",
        "English": "Reading Status",
        "German": "Ablese - status",
        "Category": "StockOverview"
      },
      {
        "Id": 16,
        "Code": "PlumbingStatus",
        "Type": "Language",
        "English": "Plumbing Status",
        "German": "Montage - status",
        "Category": "StockOverview"
      },
      {
        "Id": 17,
        "Code": "StockOverviewLabel",
        "Type": "Language",
        "English": "Stock Overview",
        "German": "Bestandsübersicht",
        "Category": "StockOverview"
      },
      {
        "Id": 18,
        "Code": "OpenLetter",
        "Type": "Language",
        "English": "Open Letter",
        "German": "Offene Schreiben",
        "Category": "StockOverview"
      },
      {
        "Id": 19,
        "Code": "CreateOrder",
        "Type": "Language",
        "English": "Create an Order",
        "German": "Auftrag einstellen",
        "Category": "StockOverview"
      },
      {
        "Id": 20,
        "Code": "AccountingPending",
        "Type": "Language",
        "English": "Accounting Pending",
        "German": "Abrechnungsperioden mit fehlenden Daten",
        "Category": "StockOverview"
      },
      {
        "Id": 21,
        "Code": "OpenLettersPending",
        "Type": "Language",
        "English": "Open Letters Pending",
        "German": "Offene Schreiben",
        "Category": "StockOverview"
      },
      {
        "Id": 22,
        "Code": "OffersPending",
        "Type": "Language",
        "English": "Offers Pending",
        "German": "Offene Angebote",
        "Category": "StockOverview"
      },
      {
        "Id": 23,
        "Code": "BuildingsDefectSmokeDetectors",
        "Type": "Language",
        "English": "Building with Defect RWM",
        "German": "Liegenschaften mit defekten RWM",
        "Category": "StockOverview"
      },
      {
        "Id": 24,
        "Code": "Meters",
        "Type": "Language",
        "English": "Meters",
        "German": "Messgeräte",
        "Category": "StockOverview"
      },
      {
        "Id": 25,
        "Code": "Buildings",
        "Type": "Language",
        "English": "Buildings",
        "German": "Liegenschaften  ",
        "Category": "StockOverview"
      },
      {
        "Id": 26,
        "Code": "Flats",
        "Type": "Language",
        "English": "Flats",
        "German": "Wohnungen",
        "Category": "StockOverview"
      },
      {
        "Id": 27,
        "Code": "PropertyOverview",
        "Type": "Language",
        "English": "Property Overview",
        "German": "Liegenschaftsübersicht",
        "Category": "StockOverview"
      },
      {
        "Id": 28,
        "Code": "InProgress",
        "Type": "Language",
        "English": "In Progress",
        "German": "Perioden in Arbeit",
        "Category": "StockOverview"
      },
      {
        "Id": 29,
        "Code": "AppointmentDate",
        "Type": "Language",
        "English": "Appointment Date",
        "German": "Wunschtermin",
        "Category": "Order"
      },
      {
        "Id": 30,
        "Code": "AppointmentDetails",
        "Type": "Language",
        "English": "Appointment Details",
        "German": "Termindetails",
        "Category": "Order"
      },
      {
        "Id": 31,
        "Code": "Address",
        "Type": "Language",
        "English": "Address (Street, Postcode, City)",
        "German": "Adresse (Straße, PLZ, Ort)",
        "Category": "StockOverview"
      },
      {
        "Id": 32,
        "Code": "EnergyPerformance",
        "Type": "Language",
        "English": "Energy Performance",
        "German": "Energieausweis",
        "Category": "Order"
      },
      {
        "Id": 33,
        "Code": "DrinkingWater",
        "Type": "Language",
        "English": "Drinking Water",
        "German": "Trinkwasser",
        "Category": "Order"
      },
      {
        "Id": 34,
        "Code": "FlatOverviewLabel",
        "Type": "Language",
        "English": "Flat Overview",
        "German": "Nutzer/Wohnungsübersicht",
        "Category": "StockOverview"
      },
      {
        "Id": 35,
        "Code": "Street",
        "Type": "Language",
        "English": "Street",
        "German": "Straße",
        "Category": "StockOverview"
      },
      {
        "Id": 36,
        "Code": "TehaUserNo",
        "Type": "Language",
        "English": "TEHA User No.",
        "German": "TEHA Nutzer Nr",
        "Category": "StockOverview"
      },
      {
        "Id": 37,
        "Code": "AdminUserNo",
        "Type": "Language",
        "English": "Admin User No.",
        "German": "Admin Nutzer Nr.",
        "Category": "StockOverview"
      },
      {
        "Id": 38,
        "Code": "Location",
        "Type": "Language",
        "English": "Location",
        "German": "Einbauort",
        "Category": "StockOverview"
      },
      {
        "Id": 39,
        "Code": "Select",
        "Type": "Language",
        "English": "Select",
        "German": "Auswahl",
        "Category": "StockOverview"
      },
      {
        "Id": 40,
        "Code": "SmokeDetectorTest",
        "Type": "Language",
        "English": "Smoke Detector Test",
        "German": "RWM Prüfung",
        "Category": "Order"
      },
      {
        "Id": 41,
        "Code": "EnterInterimReading",
        "Type": "Language",
        "English": "Enter Interim Reading",
        "German": "Zwischenablesung eingeben",
        "Category": "Order"
      },
      {
        "Id": 42,
        "Code": "OrderReading",
        "Type": "Language",
        "English": "Order Reading",
        "German": "Ablesung beauftragen",
        "Category": "Order"
      },
      {
        "Id": 43,
        "Code": "InterimReading",
        "Type": "Language",
        "English": "Interim Reading",
        "German": "Zwischenablesung   ",
        "Category": "Order"
      },
      {
        "Id": 44,
        "Code": "AllMetersHeading",
        "Type": "Language",
        "English": "All Meters",
        "German": "Alle Messgeräte des Gebäudes",
        "Category": "StockOverview"
      },
      {
        "Id": 45,
        "Code": "MeterOverviewHeading",
        "Type": "Language",
        "English": "Meter Overview",
        "German": "Messgeräteübersicht",
        "Category": "StockOverview"
      },
      {
        "Id": 46,
        "Code": "MeterType",
        "Type": "Language",
        "English": "Meter Type",
        "German": "Messgerätetyp",
        "Category": "StockOverview"
      },
      {
        "Id": 47,
        "Code": "MeterSerialNo",
        "Type": "Language",
        "English": "Meter Serial No.",
        "German": "Seriennummer   ",
        "Category": "StockOverview"
      },
      {
        "Id": 48,
        "Code": "Invoices",
        "Type": "Language",
        "English": "Invoices",
        "German": "Rechnungen",
        "Category": "DocumentArchives"
      },
      {
        "Id": 49,
        "Code": "EnergyCertificates",
        "Type": "Language",
        "English": "Energy Certificates",
        "German": "Energieausweis",
        "Category": "DocumentArchives"
      },
      {
        "Id": 50,
        "Code": "DrinkingWaterSamples",
        "Type": "Language",
        "English": "Drinking Water Samples",
        "German": "Trinkwasserbeprobung",
        "Category": "DocumentArchives"
      },
      {
        "Id": 51,
        "Code": "AllDocuments",
        "Type": "Language",
        "English": "All Documents",
        "German": "Alle Dokumente",
        "Category": "DocumentArchives"
      },
      {
        "Id": 52,
        "Code": "SepaDebitMandate",
        "Type": "Language",
        "English": "SEPA Direct Debit Mandate",
        "German": "SEPA-Lastschriftenmandat",
        "Category": "DocumentArchives"
      },
      {
        "Id": 53,
        "Code": "DownloadSepaStatement",
        "Type": "Language",
        "English": "Please download the pre-populated PDF for this building and mail to the following address",
        "German": "Bitte laden Sie das vorausgefüllte PDF für diese Liegenschaft herunter und schicken Sie es an folgende Adresse:",
        "Category": "DocumentArchives"
      },
      {
        "Id": 54,
        "Code": "DownloadPdf",
        "Type": "Language",
        "English": "Download PDF",
        "German": "PDF Download",
        "Category": "DocumentArchives"
      },
      {
        "Id": 55,
        "Code": "DescriptionDocument",
        "Type": "Language",
        "English": "Description Document",
        "German": "Beschreibung",
        "Category": "DocumentArchives"
      },
      {
        "Id": 56,
        "Code": "InvoiceAmount",
        "Type": "Language",
        "English": "Invoice Amount",
        "German": "RG-Betrag",
        "Category": "DocumentArchives"
      },
      {
        "Id": 57,
        "Code": "InvoiceNumber",
        "Type": "Language",
        "English": "Invoice Number",
        "German": "RG-Nr.",
        "Category": "DocumentArchives"
      },
      {
        "Id": 58,
        "Code": "DateOfInvoice",
        "Type": "Language",
        "English": "Date of Invoice",
        "German": "RG-Datum",
        "Category": "DocumentArchives"
      },
      {
        "Id": 59,
        "Code": "Status",
        "Type": "Language",
        "English": "Status",
        "German": "Status  ",
        "Category": "DocumentArchives"
      },
      {
        "Id": 60,
        "Code": "Difference",
        "Type": "Language",
        "English": "Difference",
        "German": "Differenz",
        "Category": "DocumentArchives"
      },
      {
        "Id": 61,
        "Code": "Download",
        "Type": "Language",
        "English": "Download",
        "German": "Download  ",
        "Category": "DocumentArchives"
      },
      {
        "Id": 62,
        "Code": "CreationDate",
        "Type": "Language",
        "English": "Creation Date",
        "German": "Erstelldatum",
        "Category": "DocumentArchives"
      },
      {
        "Id": 63,
        "Code": "Postcode",
        "Type": "Language",
        "English": "Postcode",
        "German": "PLZ",
        "Category": "StockOverview"
      },
      {
        "Id": 64,
        "Code": "City",
        "Type": "Language",
        "English": "City",
        "German": "Ort",
        "Category": "StockOverview"
      },
      {
        "Id": 65,
        "Code": "Email",
        "Type": "Language",
        "English": "Email",
        "German": "E-Mail",
        "Category": "Lookup"
      },
      {
        "Id": 66,
        "Code": "SMS",
        "Type": "Language",
        "English": "SMS",
        "German": "SMS",
        "Category": "Lookup"
      },
      {
        "Id": 67,
        "Code": "Postal",
        "Type": "Language",
        "English": "Postal",
        "German": "Post",
        "Category": "Lookup"
      },
      {
        "Id": 68,
        "Code": "Web",
        "Type": "Language",
        "English": "Web",
        "German": "Kundenportal",
        "Category": "Lookup"
      },
      {
        "Id": 69,
        "Code": "Name",
        "Type": "Language",
        "English": "Name",
        "German": "Name ",
        "Category": "Account"
      },
      {
        "Id": 70,
        "Code": "StreetAddress",
        "Type": "Language",
        "English": "Street Address",
        "German": "Straße",
        "Category": "Account"
      },
      {
        "Id": 71,
        "Code": "Phone",
        "Type": "Language",
        "English": "Phone",
        "German": "Tel",
        "Category": "Account"
      },
      {
        "Id": 72,
        "Code": "Mobile",
        "Type": "Language",
        "English": "Mobile",
        "German": "Mobil",
        "Category": "Account"
      },
      {
        "Id": 73,
        "Code": "Fax",
        "Type": "Language",
        "English": "Fax",
        "German": "Fax",
        "Category": "Account"
      },
      {
        "Id": 74,
        "Code": "Save",
        "Type": "Language",
        "English": "Save",
        "German": "Speichern ",
        "Category": "Account"
      },
      {
        "Id": 75,
        "Code": "Cancel",
        "Type": "Language",
        "English": "Cancel",
        "German": "Abbrechen",
        "Category": "Account"
      },
      {
        "Id": 76,
        "Code": "Settings",
        "Type": "Language",
        "English": "Settings",
        "German": " Die Einstellungen",
        "Category": "Account"
      },
      {
        "Id": 77,
        "Code": "General",
        "Type": "Language",
        "English": "General",
        "German": "Allgemein",
        "Category": "Account"
      },
      {
        "Id": 78,
        "Code": "Notifications",
        "Type": "Language",
        "English": "Notifications",
        "German": "Benachrichtigungen",
        "Category": "Account"
      },
      {
        "Id": 79,
        "Code": "AssignBuildings",
        "Type": "Language",
        "English": "Assign Buildings",
        "German": "Liegenschaft zuweisen",
        "Category": "Account"
      },
      {
        "Id": 80,
        "Code": "MyContracts",
        "Type": "Language",
        "English": "My Contracts",
        "German": "Verträge",
        "Category": "Account"
      },
      {
        "Id": 81,
        "Code": "MyTeam",
        "Type": "Language",
        "English": "My Team",
        "German": "Mein Team",
        "Category": "Account"
      },
      {
        "Id": 82,
        "Code": "ReceiveBillStatement",
        "Type": "Language",
        "English": "How do you want to receive bill/invoice ?",
        "German": "Wie möchten Sie Ihre Rechnungen empfangen?",
        "Category": "Account"
      },
      {
        "Id": 83,
        "Code": "ReadingDatesStatement",
        "Type": "Language",
        "English": "How do you want to be informed about reading dates ?",
        "German": "Wie möchten Sie über Ablesetermine benachrichtigt werden?",
        "Category": "Account"
      },
      {
        "Id": 84,
        "Code": "NewInvoiceStatement",
        "Type": "Language",
        "English": "How do you want to be informed, if a new invoice is available in the Customer Portal ?",
        "German": "Wie möchten Sie über neue Rechnungen benachrichtigt werden?",
        "Category": "Account"
      },
      {
        "Id": 85,
        "Code": "ReceiveReadingReportStatement",
        "Type": "Language",
        "English": "Do you want to receive a report after first reading attempt? If yes, then how?",
        "German": "Möchten Sie einen Bericht nach dem 1. Ablesetermin erhalten? Falls ja, markieren Sie eine der Optionen.",
        "Category": "Account"
      },
      {
        "Id": 86,
        "Code": "ReceiveAccountingStatement",
        "Type": "Language",
        "English": "How do you want to receive the accounting document?",
        "German": "Wie möchten Sie Ihre Abrechnungsunterlagen erhalten?",
        "Category": "Account"
      },
      {
        "Id": 87,
        "Code": "PlumbingDatesStatement",
        "Type": "Language",
        "English": "How do you want to be informed about the plumbing dates?",
        "German": "Wie möchten Sie über die Montagetermin benachrichtigt werden?",
        "Category": "Account"
      },
      {
        "Id": 88,
        "Code": "PlumbingReportsStatement",
        "Type": "Language",
        "English": "How do you want to receive the plumbing reports?",
        "German": "Wie möchten Sie Ihre Montagebericht erhalten?",
        "Category": "Account"
      },
      {
        "Id": 89,
        "Code": "RemainingLettersStatement",
        "Type": "Language",
        "English": "How do you want to receive your remaining letters?",
        "German": "Wie möchten Sie Ihre Erinnerungsschreiben erhalten?",
        "Category": "Account"
      },
      {
        "Id": 90,
        "Code": "DefectedSmokeStatement",
        "Type": "Language",
        "English": "When do you want to be informed about defected smoke detectors",
        "German": "Wann möchten Sie über defekte Rauchwarnmelder informiert werden?",
        "Category": "Account"
      },
      {
        "Id": 91,
        "Code": "UsersNotAvailableStatement",
        "Type": "Language",
        "English": "When do you want to be informed about users being not available within readings?",
        "German": "Wann möchten Sie nicht anwesende Nutzer informiert werden?",
        "Category": "Account"
      },
      {
        "Id": 92,
        "Code": "CommunicationChannels",
        "Type": "Language",
        "English": "Communication Channels",
        "German": "Kommunikationskanäle",
        "Category": "Account"
      },
      {
        "Id": 93,
        "Code": "CurrentPassword",
        "Type": "Language",
        "English": "Current Password",
        "German": "Aktuelles Passwort",
        "Category": "Account"
      },
      {
        "Id": 94,
        "Code": "NewPassword",
        "Type": "Language",
        "English": "New Password",
        "German": "Neues Passwort",
        "Category": "Account"
      },
      {
        "Id": 95,
        "Code": "ConfirmPassword",
        "Type": "Language",
        "English": "Confirm Password",
        "German": "Passwort bestätigen",
        "Category": "Account"
      },
      {
        "Id": 96,
        "Code": "ContractType",
        "Type": "Language",
        "English": "Contract Type",
        "German": "Vertragstyp",
        "Category": "Account"
      },
      {
        "Id": 97,
        "Code": "StartDate",
        "Type": "Language",
        "English": "Start Date",
        "German": "Startdatum",
        "Category": "Account"
      },
      {
        "Id": 98,
        "Code": "EndDate",
        "Type": "Language",
        "English": "End Date",
        "German": "Enddatum",
        "Category": "Account"
      },
      {
        "Id": 99,
        "Code": "OrderType",
        "Type": "Language",
        "English": "Order Type",
        "German": "Auftragsart",
        "Category": "Order"
      },
      {
        "Id": 100,
        "Code": "OrderStatus",
        "Type": "Language",
        "English": "Order Status",
        "German": "Auftragsstatus",
        "Category": "Order"
      },
      {
        "Id": 101,
        "Code": "MyOrdersOverview",
        "Type": "Language",
        "English": "My Orders - Overview",
        "German": "Meine Aufträge - Übersicht",
        "Category": "Order"
      },
      {
        "Id": 102,
        "Code": "HCA",
        "Type": "Language",
        "English": "HCA",
        "German": "Heizkostenverteiler",
        "Category": "Lookup"
      },
      {
        "Id": 103,
        "Code": "HotWater",
        "Type": "Language",
        "English": "Hot Water",
        "German": "Warmwasser ",
        "Category": "Lookup"
      },
      {
        "Id": 104,
        "Code": "ColdWater",
        "Type": "Language",
        "English": "Cold Water",
        "German": "Kaltwasser",
        "Category": "Lookup"
      },
      {
        "Id": 105,
        "Code": "HeatMeter",
        "Type": "Language",
        "English": "Heat Meter",
        "German": "Wärmezähler",
        "Category": "Lookup"
      },
      {
        "Id": 106,
        "Code": "SmokeDetector",
        "Type": "Language",
        "English": "Smoke Detector",
        "German": "Rauchwarnmelder",
        "Category": "Lookup"
      },
      {
        "Id": 107,
        "Code": "Other",
        "Type": "Language",
        "English": "Other",
        "German": "Sonstige",
        "Category": "Lookup"
      },
      {
        "Id": 108,
        "Code": "HelloCardWelcome",
        "Type": "Language",
        "English": "How can we help you today?",
        "German": "Auf Ihrem persönlichen Dashboard sind die wichtigsten Vorgänge in Ihren Liegenschaften auf einen Blick zusammengefasst. Durch Klick auf die jeweiligen Icons erhalten Sie weitere Detailangaben. ",
        "Category": "Miscellaneous"
      },
      {
        "Id": 109,
        "Code": "OrderPlumbing",
        "Type": "Language",
        "English": "Order Plumbing",
        "German": "Montage beauftragen",
        "Category": "Order"
      },
      {
        "Id": 110,
        "Code": "Submit",
        "Type": "Language",
        "English": "Submit",
        "German": "Abschicken",
        "Category": "Account"
      },
      {
        "Id": 111,
        "Code": "UsernamePlaceholder",
        "Type": "Language",
        "English": "Enter your register username",
        "German": "Geben Sie Ihren Benutzernamen ein",
        "Category": "Account"
      },
      {
        "Id": 112,
        "Code": "BackToOrders",
        "Type": "Language",
        "English": "Back to Orders",
        "German": "Zurück zu den Aufträgen",
        "Category": "Order"
      },
      {
        "Id": 113,
        "Code": "OrderConfirmationMessage",
        "Type": "Language",
        "English": "Your order has been confirmed.",
        "German": "Ihr Auftrag wurde bestätigt.",
        "Category": "Order"
      },
      {
        "Id": 114,
        "Code": "ReceivedOrder",
        "Type": "Language",
        "English": "We have received your order, and will take care of it immediately.",
        "German": "Wir haben Ihren Auftrag erhalten und kümmern uns umgehend um ihn.",
        "Category": "Order"
      },
      {
        "Id": 115,
        "Code": "EmailMessage",
        "Type": "Language",
        "English": "You will receive an order confirmation by email shortly.",
        "German": "Ihre Auftragsbestätigung erhalten Sie in Kürze per E-Mail.",
        "Category": "Order"
      },
      {
        "Id": 116,
        "Code": "TehaServiceTeam",
        "Type": "Language",
        "English": "TEHA Service Team",
        "German": "TEHA Service Team",
        "Category": "Order"
      },
      {
        "Id": 117,
        "Code": "Confirm",
        "Type": "Language",
        "English": "Confirm",
        "German": "Bestätigen",
        "Category": "Order"
      },
      {
        "Id": 118,
        "Code": "DataProtectionMessage",
        "Type": "Language",
        "English": "I have read the declaration on data protection and agree to the storage of data for the period specified by TEHA.",
        "German": "Ich habe die Erklärung zum Datenschutz der  TEHA Technischer Hausservice GmbH gelesen und verstanden und bin mit der Verarbeitung der Daten in Übereinstimmung mit den Bedingungen der Erklärung zum Datenschutz einverstanden.",
        "Category": "Order"
      },
      {
        "Id": 119,
        "Code": "InterimReadingCostMessage",
        "Type": "Language",
        "English": "There is a charge for ordering the interim meter reading. I agree to pay those charges according to the ",
        "German": "Ich habe zur Kenntnis genommen, dass die Beauftragung einer Zwischenablesung kostenpflichtig ist. ",
        "Category": "Order"
      },
      {
        "Id": 120,
        "Code": "TermsMessagePart1",
        "Type": "Language",
        "English": "I have read and understood the",
        "German": "Ich habe die Allgemeinen Geschäftsbedingungen gelesen und verstanden.",
        "Category": "Order"
      },
      {
        "Id": 121,
        "Code": "TermsMessagePart2",
        "Type": "Language",
        "English": "Terms & Conditions, and the Cancellation Policy.",
        "German": "Allgemeine Geschäftsbedingungen und die Stornierungsbedingungen.",
        "Category": "Order"
      },
      {
        "Id": 122,
        "Code": "TermsMessagePart3",
        "Type": "Language",
        "English": ", and the",
        "German": ", und der",
        "Category": "Order"
      },
      {
        "Id": 123,
        "Code": "TermsMessagePart4",
        "Type": "Language",
        "English": "Cancellation Policy.",
        "German": "Stornierungsbedingungen.",
        "Category": "Order"
      },
      {
        "Id": 124,
        "Code": "EmailAddress",
        "Type": "Language",
        "English": "Email",
        "German": "E-Mail",
        "Category": "Order"
      },
      {
        "Id": 125,
        "Code": "MobileNo",
        "Type": "Language",
        "English": "Mobile No.",
        "German": "Mobil",
        "Category": "Order"
      },
      {
        "Id": 126,
        "Code": "TelephoneNo",
        "Type": "Language",
        "English": "Telephone No.",
        "German": "Tel:",
        "Category": "Order"
      },
      {
        "Id": 127,
        "Code": "FirstName",
        "Type": "Language",
        "English": "First Name",
        "German": "Vorname",
        "Category": "Order"
      },
      {
        "Id": 128,
        "Code": "LastName",
        "Type": "Language",
        "English": "Last Name",
        "German": "Nachname",
        "Category": "Order"
      },
      {
        "Id": 129,
        "Code": "AlternateUser",
        "Type": "Language",
        "English": "Alternate User",
        "German": "Alternativer Nutzer",
        "Category": "Order"
      },
      {
        "Id": 130,
        "Code": "Comments",
        "Type": "Language",
        "English": "Comments",
        "German": "Bemerkungen",
        "Category": "Order"
      },
      {
        "Id": 131,
        "Code": "AlternativeDateRange",
        "Type": "Language",
        "English": "Alternative Date Range",
        "German": "Alternativer Zeitraum",
        "Category": "Order"
      },
      {
        "Id": 132,
        "Code": "To",
        "Type": "Language",
        "English": "to",
        "German": "bis",
        "Category": "Order"
      },
      {
        "Id": 133,
        "Code": "BestAccessibility",
        "Type": "Language",
        "English": "Best Accessibility",
        "German": "Beste Erreichbarkeit",
        "Category": "Order"
      },
      {
        "Id": 134,
        "Code": "LetterMail",
        "Type": "Language",
        "English": "Letter (Mail)",
        "German": "E-Mail",
        "Category": "Order"
      },
      {
        "Id": 135,
        "Code": "NotifyThrough",
        "Type": "Language",
        "English": "Notify Through",
        "German": "Benachrichtigungen durch",
        "Category": "Order"
      },
      {
        "Id": 136,
        "Code": "OrderReadingFormHeader",
        "Type": "Language",
        "English": "Order Reading -- Enter Data",
        "German": "Ablesung beauftragen - Dateneingabe",
        "Category": "Order"
      },
      {
        "Id": 137,
        "Code": "OrderSmokeDetectorFormHeader",
        "Type": "Language",
        "English": "Order Smoke Detector Test",
        "German": "Rauchwarnmelderprüfung beauftragen",
        "Category": "Order"
      },
      {
        "Id": 138,
        "Code": "UserMovingOut",
        "Type": "Language",
        "English": "User Moving Out",
        "German": "Ausziehender Nutzer",
        "Category": "Order"
      },
      {
        "Id": 139,
        "Code": "MoveoutDate",
        "Type": "Language",
        "English": "Move-out-Date",
        "German": "Auszugsdatum",
        "Category": "Order"
      },
      {
        "Id": 140,
        "Code": "AppointmentRequestDate",
        "Type": "Language",
        "English": "Appointment Request Date",
        "German": "Wunschtermin",
        "Category": "Order"
      },
      {
        "Id": 141,
        "Code": "NewUser",
        "Type": "Language",
        "English": "New User",
        "German": "Neuer Nutzer",
        "Category": "Order"
      },
      {
        "Id": 142,
        "Code": "PriceList",
        "Type": "Language",
        "English": "price list.",
        "German": "Preisliste",
        "Category": "Order"
      },
      {
        "Id": 143,
        "Code": "SmokeDetectorCostMessage",
        "Type": "Language",
        "English": "There is a charge for ordering the smoke detector test. I agree to pay those charges according to the ",
        "German": "Ich habe zur Kenntnis genommen, dass die Beauftragung einer Rauchwarnmelderprüfung kostenpflichtig ist. ",
        "Category": "Order"
      },
      {
        "Id": 144,
        "Code": "ReadingCostMessage",
        "Type": "Language",
        "English": "There is a charge for ordering reading. I agree to pay those charges according to the ",
        "German": "Ich habe zur Kenntnis genommen, dass die Beauftragung einer Ablesung kostenpflichtig ist. ",
        "Category": "Order"
      },
      {
        "Id": 145,
        "Code": "IRFormTitle",
        "Type": "Language",
        "English": "Order Interim Reading",
        "German": "Zwischenablesung beauftragen",
        "Category": "Order"
      },
      {
        "Id": 146,
        "Code": "OrderSummary",
        "Type": "Language",
        "English": "Order Summary",
        "German": "Zusammenfassung",
        "Category": "Order"
      },
      {
        "Id": 147,
        "Code": "SelectAFlat",
        "Type": "Language",
        "English": "Select a Flat:",
        "German": "Wählen Sie eine Wohnung/Nutzer aus",
        "Category": "Order"
      },
      {
        "Id": 148,
        "Code": "IRSummaryTitle",
        "Type": "Language",
        "English": "You have ordered “Interim Meter Reading“ for the following flat(s):",
        "German": "Sie haben eine Zwischenablesung für folgende Wohnungen/Nutzer beauftragt:",
        "Category": "Order"
      },
      {
        "Id": 149,
        "Code": "ContinuetoUserData",
        "Type": "Language",
        "English": "Continue to User Data",
        "German": "Weiter zu den Nutzerdaten",
        "Category": "Order"
      },
      {
        "Id": 150,
        "Code": "GotoAppointmentDetails",
        "Type": "Language",
        "English": "Go to Appointment Details",
        "German": "Weiter zur Termineingabe",
        "Category": "Order"
      },
      {
        "Id": 151,
        "Code": "ContinuetoMeters",
        "Type": "Language",
        "English": "Continue to Meters",
        "German": "Weiter zu den Messgeräten",
        "Category": "Order"
      },
      {
        "Id": 152,
        "Code": "RSummaryTitle",
        "Type": "Language",
        "English": "You have ordered “Reading“ for the following flat:",
        "German": "Sie haben eine Sonderablesung für folgende Wohnungen beauftragt:",
        "Category": "Order"
      },
      {
        "Id": 153,
        "Code": "InstalledLocation",
        "Type": "Language",
        "English": "Installed Location",
        "German": "Einbauort",
        "Category": "Order"
      },
      {
        "Id": 154,
        "Code": "CounterReading",
        "Type": "Language",
        "English": "Counter Reading",
        "German": "Zählerstand",
        "Category": "Order"
      },
      {
        "Id": 155,
        "Code": "LastReading",
        "Type": "Language",
        "English": "Last Reading",
        "German": "Letzte Ablesung",
        "Category": "Order"
      },
      {
        "Id": 156,
        "Code": "EIRSummaryTitle",
        "Type": "Language",
        "English": "You have “Entered Interim Readings” for the following flat:",
        "German": "Sie haben eine Zwischenablesung für folgende Wohnungen/Nutzer eingegeben:",
        "Category": "Order"
      },
      {
        "Id": 157,
        "Code": "OrderConfirmation",
        "Type": "Language",
        "English": "Order Confirmation",
        "German": "Bestellbestätigung",
        "Category": "Order"
      },
      {
        "Id": 158,
        "Code": "AddressOnly",
        "Type": "Language",
        "English": "Address",
        "German": "Adresse",
        "Category": "Order"
      },
      {
        "Id": 159,
        "Code": "AddressParts",
        "Type": "Language",
        "English": "(Street, City, Postcode)",
        "German": "Straße, PLZ, Ort",
        "Category": "Order"
      },
      {
        "Id": 160,
        "Code": "RequestaQuote",
        "Type": "Language",
        "English": "Request a Quote",
        "German": "Fordern Sie ein Angebot an",
        "Category": "Order"
      },
      {
        "Id": 161,
        "Code": "RequestaQuoteSummary",
        "Type": "Language",
        "English": "Request a Quote -- Summary",
        "German": "Fordern Sie ein Angebot an - Zusammenfassung",
        "Category": "Order"
      },
      {
        "Id": 162,
        "Code": "CommentsQuestion",
        "Type": "Language",
        "English": "Is there anything you would like to add?",
        "German": "Möchten Sie noch etwas hinzufügen?",
        "Category": "Order"
      },
      {
        "Id": 163,
        "Code": "CommentsObservations",
        "Type": "Language",
        "English": "Comments / Observations",
        "German": "Bemerkungen",
        "Category": "Order"
      },
      {
        "Id": 164,
        "Code": "Next",
        "Type": "Language",
        "English": "Next",
        "German": "Weiter",
        "Category": "Order"
      },
      {
        "Id": 165,
        "Code": "ThankYouMsg",
        "Type": "Language",
        "English": "Thank you for filling the details to “Request a Quote”.",
        "German": "Vielen Dank für Ihren Auftrag.",
        "Category": "Order"
      },
      {
        "Id": 166,
        "Code": "CheckMsg",
        "Type": "Language",
        "English": "Please check the following to complete your request:",
        "German": "Bitte überprüfen Sie nochmal Ihre Eingaben.",
        "Category": "Order"
      },
      {
        "Id": 167,
        "Code": "TermsAndCondition",
        "Type": "Language",
        "English": "I have read and understood the Terms & Conditions, and the Cancellation Policy.",
        "German": "Ich habe die Allgemeinen Geschäftsbedingungen gelesen und verstanden.",
        "Category": "Order"
      },
      {
        "Id": 168,
        "Code": "ConfirmEntriesMsg",
        "Type": "Language",
        "English": "I confirm that all entries are complete and correct.",
        "German": "Hiermit bestätige ich, dass alle Eingaben vollständig und korrekt sind.",
        "Category": "Order"
      },
      {
        "Id": 169,
        "Code": "PSOne",
        "Type": "Language",
        "English": "Please select one",
        "German": "Bitte wählen Sie einen aus.",
        "Category": "Order"
      },
      {
        "Id": 170,
        "Code": "MetersQuestion",
        "Type": "Language",
        "English": "Are meters already installed?",
        "German": "Sind Messgeräte bereits installiert?",
        "Category": "Order"
      },
      {
        "Id": 171,
        "Code": "Yes",
        "Type": "Language",
        "English": "Yes",
        "German": "Ja",
        "Category": "Order"
      },
      {
        "Id": 172,
        "Code": "IDWAMeter",
        "Type": "Language",
        "English": "I don’t want a meter",
        "German": "Ich wünsche keine Zähler",
        "Category": "Order"
      },
      {
        "Id": 173,
        "Code": "OwnerOrManager",
        "Type": "Language",
        "English": "Are you the owner or property manager?",
        "German": "Sind Sie Eigentümer/in oder Hausverwalter/in?",
        "Category": "Order"
      },
      {
        "Id": 174,
        "Code": "Owner",
        "Type": "Language",
        "English": "Owner",
        "German": "Eigentümer/in",
        "Category": "Order"
      },
      {
        "Id": 175,
        "Code": "PropertyManager",
        "Type": "Language",
        "English": "Property Manager",
        "German": "Hausverwalter/in",
        "Category": "Order"
      },
      {
        "Id": 176,
        "Code": "OtherTypeDescription",
        "Type": "Language",
        "English": "Other Type Description",
        "German": "Andere Beschreibung",
        "Category": "Order"
      },
      {
        "Id": 177,
        "Code": "TypesOfServices",
        "Type": "Language",
        "English": "Types of Services",
        "German": "Arten von Dienstleistungen",
        "Category": "Order"
      },
      {
        "Id": 178,
        "Code": "SelectApply",
        "Type": "Language",
        "English": "Please select all that apply",
        "German": "Bitte wählen Sie alle zutreffenden aus",
        "Category": "Order"
      },
      {
        "Id": 179,
        "Code": "No",
        "Type": "Language",
        "English": "No",
        "German": "Nein",
        "Category": "Order"
      },
      {
        "Id": 180,
        "Code": "TypeOfBuilding",
        "Type": "Language",
        "English": "Type of Building",
        "German": "Art des Gebäudes",
        "Category": "Order"
      },
      {
        "Id": 181,
        "Code": "Residential",
        "Type": "Language",
        "English": "Residential",
        "German": "Wohngebäude",
        "Category": "Order"
      },
      {
        "Id": 182,
        "Code": "Commercial",
        "Type": "Language",
        "English": "Commercial",
        "German": "Gewerbe",
        "Category": "Order"
      },
      {
        "Id": 183,
        "Code": "ResidentialCommercial",
        "Type": "Language",
        "English": "Residential & Commercial",
        "German": "Wohn - Und Gewerbe",
        "Category": "Order"
      },
      {
        "Id": 184,
        "Code": "UserContactDetails",
        "Type": "Language",
        "English": "User Contact Details",
        "German": "Kontaktadresse",
        "Category": "Order"
      },
      {
        "Id": 185,
        "Code": "NewPropertyAddress",
        "Type": "Language",
        "English": "New Property Address",
        "German": "Liegenschaftsadresse",
        "Category": "Order"
      },
      {
        "Id": 186,
        "Code": "NoOfFlats",
        "Type": "Language",
        "English": "No. of flats",
        "German": "Anzahl der Wohnungen",
        "Category": "Order"
      },
      {
        "Id": 187,
        "Code": "NoOfCommercialUnits",
        "Type": "Language",
        "English": "No. of commercial units",
        "German": "Anzahl Gewerbeeinheiten",
        "Category": "Order"
      },
      {
        "Id": 188,
        "Code": "Rent",
        "Type": "Language",
        "English": "Rent",
        "German": "Miete",
        "Category": "Order"
      },
      {
        "Id": 189,
        "Code": "Purchase",
        "Type": "Language",
        "English": "Purchase",
        "German": "Kauf",
        "Category": "Order"
      },
      {
        "Id": 190,
        "Code": "WarrantyMaintenance",
        "Type": "Language",
        "English": "Warranty Maintanence",
        "German": "Garantiewartung",
        "Category": "Order"
      },
      {
        "Id": 191,
        "Code": "ACW",
        "Type": "Language",
        "English": "Accounting (Cold Water)",
        "German": "Abrechnung (Kaltwasser)",
        "Category": "Order"
      },
      {
        "Id": 192,
        "Code": "SAC",
        "Type": "Language",
        "English": "Settlement of Ancillary Costs",
        "German": "Abrechnung von Nebenkosten",
        "Category": "Order"
      },
      {
        "Id": 193,
        "Code": "NSN",
        "Type": "Language",
        "English": "No service necessary",
        "German": "Keine Dienstleistung erforderlich",
        "Category": "Order"
      },
      {
        "Id": 194,
        "Code": "SerialNumber",
        "Type": "Language",
        "English": "Serial Number",
        "German": "Seriennummer",
        "Category": "Order"
      },
      {
        "Id": 195,
        "Code": "TestReason",
        "Type": "Language",
        "English": "Test Reason",
        "German": "Testgrund",
        "Category": "Order"
      },
      {
        "Id": 196,
        "Code": "SDTSTitle",
        "Type": "Language",
        "English": "You have ordered “Smoke Detector Test“ for the following flat:",
        "German": "Sie haben eine Rauchwarnmelderprüfung für folgende Wohnungen beauftragt:",
        "Category": "Order"
      },
      {
        "Id": 197,
        "Code": "Amount",
        "Type": "Language",
        "English": "Amount",
        "German": "Menge",
        "Category": "Order"
      },
      {
        "Id": 198,
        "Code": "Unit",
        "Type": "Language",
        "English": "Unit",
        "German": "Einheit",
        "Category": "Order"
      },
      {
        "Id": 199,
        "Code": "OrderEnergyCertificate",
        "Type": "Language",
        "English": "Order Energy Certificate",
        "German": "Energieausweis bestellen",
        "Category": "Order"
      },
      {
        "Id": 200,
        "Code": "YearOfConstruction",
        "Type": "Language",
        "English": "Year of Construction",
        "German": "Baujahr des Gebäudes",
        "Category": "Order"
      },
      {
        "Id": 201,
        "Code": "YearOfHeating",
        "Type": "Language",
        "English": "Year of Heating",
        "German": "Baujahr Heizung",
        "Category": "Order"
      },
      {
        "Id": 202,
        "Code": "RenewalOfHeating",
        "Type": "Language",
        "English": "Renewal of Heating",
        "German": "Erneuerung der Heizung",
        "Category": "Order"
      },
      {
        "Id": 203,
        "Code": "HeatableArea",
        "Type": "Language",
        "English": "Heatable Area",
        "German": "Beheizbare Nutzfläche",
        "Category": "Order"
      },
      {
        "Id": 204,
        "Code": "Basementheated",
        "Type": "Language",
        "English": "Basement heated",
        "German": "Keller beheizt",
        "Category": "Order"
      },
      {
        "Id": 205,
        "Code": "HeatingSystem",
        "Type": "Language",
        "English": "Heating System",
        "German": "Heizsystem",
        "Category": "Order"
      },
      {
        "Id": 206,
        "Code": "BuildingWithBasement",
        "Type": "Language",
        "English": "Building with basement",
        "German": "Gebäude unterkellert",
        "Category": "Order"
      },
      {
        "Id": 207,
        "Code": "MonumentProtection",
        "Type": "Language",
        "English": "Monument Protection",
        "German": "Denkmalschutz",
        "Category": "Order"
      },
      {
        "Id": 208,
        "Code": "IsBCool",
        "Type": "Language",
        "English": "Is the building cooled",
        "German": "Wird das Gebäude gekühlt?",
        "Category": "Order"
      },
      {
        "Id": 209,
        "Code": "EnergySource",
        "Type": "Language",
        "English": "Energy Source",
        "German": "Energieträger",
        "Category": "Order"
      },
      {
        "Id": 210,
        "Code": "AHCHW",
        "Type": "Language",
        "English": "Accounting (Heating Cost & Hot Water)",
        "German": "Abrechnung (Heizkosten & Warmwasser)",
        "Category": "Order"
      },
      {
        "Id": 211,
        "Code": "FloorHeating",
        "Type": "Language",
        "English": "Floor Heating",
        "German": "Fußbodenheizung",
        "Category": "Order"
      },
      {
        "Id": 212,
        "Code": "CentralHeating",
        "Type": "Language",
        "English": "Central Heating",
        "German": "Zentralheizung",
        "Category": "Order"
      },
      {
        "Id": 213,
        "Code": "HeatingOil",
        "Type": "Language",
        "English": "Heating Oil",
        "German": "Heizöl",
        "Category": "Order"
      },
      {
        "Id": 214,
        "Code": "LiquidGas",
        "Type": "Language",
        "English": "Liquid Gas",
        "German": "Flüssiggas",
        "Category": "Order"
      },
      {
        "Id": 215,
        "Code": "DistrictHeating",
        "Type": "Language",
        "English": "District Heating",
        "German": "Fernwärme",
        "Category": "Order"
      },
      {
        "Id": 216,
        "Code": "Electricity",
        "Type": "Language",
        "English": "Electricity",
        "German": "Elektrizität",
        "Category": "Order"
      },
      {
        "Id": 217,
        "Code": "AssignNewBuilding",
        "Type": "Language",
        "English": "Assign New Building",
        "German": "Liegenschaft zuweisen",
        "Category": "Account"
      },
      {
        "Id": 218,
        "Code": "AddNewTeamMember",
        "Type": "Language",
        "English": "Add New Team Member",
        "German": "Neues Teammitglied hinzufügen",
        "Category": "Account"
      },
      {
        "Id": 219,
        "Code": "RequestTeamMember",
        "Type": "Language",
        "English": "Request Team Member",
        "German": "Teammitglied anlegen",
        "Category": "Account"
      },
      {
        "Id": 220,
        "Code": "AssignPropertyData",
        "Type": "Language",
        "English": "Assign Property Data",
        "German": "",
        "Category": "Account"
      },
      {
        "Id": 221,
        "Code": "Annex",
        "Type": "Language",
        "English": "Annex",
        "German": "Anhang",
        "Category": "Order"
      },
      {
        "Id": 222,
        "Code": "PCYCR",
        "Type": "Language",
        "English": "Please cross check your counter reading",
        "German": "Überprüfen Sie ggfs. nochmal den Zählerstand.",
        "Category": "Order"
      },
      {
        "Id": 223,
        "Code": "Vacant",
        "Type": "Language",
        "English": "Vacant",
        "German": "Leerstand",
        "Category": "Order"
      },
      {
        "Id": 224,
        "Code": "UserMovingIn",
        "Type": "Language",
        "English": "User Moving In",
        "German": "Einziehender Nutzer",
        "Category": "Order"
      },
      {
        "Id": 225,
        "Code": "MoveInDate",
        "Type": "Language",
        "English": "Move-in-Date",
        "German": "Einzugsdatum",
        "Category": "Order"
      },
      {
        "Id": 226,
        "Code": "EInterimReadingCostMessage",
        "Type": "Language",
        "English": "There is a charge for ordering the enter interim meter reading. agree to pay those charges according to the",
        "German": "Ich habe zur Kenntnis genommen, dass die Eingabe einer Ablesung und die damit verbunden Nacharbeiten kostenpflichtig ist. ",
        "Category": "Order"
      },
      {
        "Id": 227,
        "Code": "EIRReciveMsg",
        "Type": "Language",
        "English": "We have received your enter Interim Meter Readings.",
        "German": "Wir haben Ihre Zählereingaben erhalten.",
        "Category": "Order"
      },
      {
        "Id": 228,
        "Code": "DocumentCategory",
        "Type": "Language",
        "English": "Document Category",
        "German": "Kategorie",
        "Category": "DocumentArchives"
      },
      {
        "Id": 229,
        "Code": "RentId",
        "Type": "Language",
        "English": "Rent ID",
        "German": "Rent ID",
        "Category": "DocumentArchives"
      },
      {
        "Id": 230,
        "Code": "DownloadAllPropertyDocs",
        "Type": "Language",
        "English": "Download All Property Documents",
        "German": "Alle Liegenschaftsdokumente herunterladen",
        "Category": "DocumentArchives"
      },
      {
        "Id": 231,
        "Code": "DownloadAllFlatDocs",
        "Type": "Language",
        "English": "Download All Flat Documents",
        "German": "Alle Wohnungsunterlagen herunterladen",
        "Category": "DocumentArchives"
      },
      {
        "Id": 232,
        "Code": "DownloadAllMeterDocs",
        "Type": "Language",
        "English": "Download All Meter Documents",
        "German": "Alle Messgeräteunterlagen herunterladen",
        "Category": "DocumentArchives"
      },
      {
        "Id": 233,
        "Code": "Property",
        "Type": "Language",
        "English": "Property",
        "German": "Liegenschaft",
        "Category": "StockOverview"
      },
      {
        "Id": 234,
        "Code": "AssignedSuccessfully",
        "Type": "Language",
        "English": "Assigned Successfully",
        "German": "Zuweisung erfolgreich",
        "Category": "Miscellaneous"
      },
      {
        "Id": 235,
        "Code": "AddedSuccessfully",
        "Type": "Language",
        "English": "Added Successfully",
        "German": "Daten erfolgreich gespeichert",
        "Category": "Miscellaneous"
      },
      {
        "Id": 236,
        "Code": "ChangedSuccessfully",
        "Type": "Language",
        "English": "Changed Successfully",
        "German": "Erolgreich gespeichert",
        "Category": "Miscellaneous"
      },
      {
        "Id": 237,
        "Code": "CurrentPasswordWrong",
        "Type": "Language",
        "English": "Current password is wrong!",
        "German": "Das aktuelle Passwort ist falsch",
        "Category": "Miscellaneous"
      },
      {
        "Id": 238,
        "Code": "CouldNotUpdate",
        "Type": "Language",
        "English": "Could not update!",
        "German": "Update nicht erfolgreich",
        "Category": "Miscellaneous"
      },
      {
        "Id": 239,
        "Code": "CurrentPasswordMatch",
        "Type": "Language",
        "English": "Current Password should not be equal to New Password!",
        "German": "Das aktuelle Passwort sollte nicht gleich dem neuen Passwort sein.",
        "Category": "Miscellaneous"
      },
      {
        "Id": 240,
        "Code": "FillAllFields",
        "Type": "Language",
        "English": "Please fill all the fields to continue!",
        "German": "Bitte füllen Sie alle erforderlichen Felder aus.",
        "Category": "Miscellaneous"
      },
      {
        "Id": 241,
        "Code": "PasswordsNotMatch",
        "Type": "Language",
        "English": "Passwords do not match!",
        "German": "Die Passwörter stimmen nicht überein.",
        "Category": "Miscellaneous"
      },
      {
        "Id": 242,
        "Code": "ChangesDiscarded",
        "Type": "Language",
        "English": "Changes Discarded!",
        "German": "Änderungen verworfen",
        "Category": "Miscellaneous"
      },
      {
        "Id": 243,
        "Code": "ChangeDataBeforeSaving",
        "Type": "Language",
        "English": "Please change some data before saving!",
        "German": "Bitte ändern Sie die Daten bevor die speichern.",
        "Category": "Miscellaneous"
      },
      {
        "Id": 244,
        "Code": "UpdatedSuccessfully",
        "Type": "Language",
        "English": "Updated Successfully",
        "German": "Update erfolgreich",
        "Category": "Miscellaneous"
      },
      {
        "Id": 245,
        "Code": "PropertyDeletedSuccessfully",
        "Type": "Language",
        "English": "Property Deleted Successfully",
        "German": "Liegenschaft erfolgreich gelöscht.",
        "Category": "Miscellaneous"
      },
      {
        "Id": 246,
        "Code": "DeletePropertyQuestion",
        "Type": "Language",
        "English": "Are you sure you want to delete the selected Property?",
        "German": "Sind Sie sicher, dass Sie die ausgewählte Liegenschaft löschen wollen?",
        "Category": "Miscellaneous"
      },
      {
        "Id": 247,
        "Code": "SelectValidProperty",
        "Type": "Language",
        "English": "Please select a valid Property!",
        "German": "Bitte wählen Sie eine gültige Liegenschaft aus.",
        "Category": "Miscellaneous"
      },
      {
        "Id": 248,
        "Code": "PropertyExists",
        "Type": "Language",
        "English": "Property already exists!",
        "German": "Die Liegenschaft existiert bereits.",
        "Category": "Miscellaneous"
      },
      {
        "Id": 249,
        "Code": "Type",
        "Type": "Language",
        "English": "Type",
        "German": "Typ",
        "Category": "Miscellaneous"
      },
      {
        "Id": 250,
        "Code": "Partially",
        "Type": "Language",
        "English": "Partially",
        "German": "Teilweise",
        "Category": "Order"
      },
      {
        "Id": 251,
        "Code": "NaturalGas",
        "Type": "Language",
        "English": "Natural Gas",
        "German": "Erdgas",
        "Category": "Order"
      },
      {
        "Id": 252,
        "Code": "Wood",
        "Type": "Language",
        "English": "Wood",
        "German": "Holz",
        "Category": "Order"
      },
      {
        "Id": 253,
        "Code": "HeatPump",
        "Type": "Language",
        "English": "Heat Pump",
        "German": "Wärmepumpe",
        "Category": "Order"
      },
      {
        "Id": 254,
        "Code": "Period",
        "Type": "Language",
        "English": "Period",
        "German": "Zeitraum",
        "Category": "Order"
      },
      {
        "Id": 255,
        "Code": "ConsumptionForTE",
        "Type": "Language",
        "English": "Consumption for Thermal Energy",
        "German": "Verbrauch für Wärmeenergie",
        "Category": "Order"
      },
      {
        "Id": 256,
        "Code": "VacancyIn",
        "Type": "Language",
        "English": "Vacancy in",
        "German": "Stellenangebot in",
        "Category": "Order"
      },
      {
        "Id": 257,
        "Code": "RenovationMeasure",
        "Type": "Language",
        "English": "Renovation Measures",
        "German": "Renovierungsmaßnahmen",
        "Category": "Order"
      },
      {
        "Id": 258,
        "Code": "FacadeInsulationYear",
        "Type": "Language",
        "English": "Facade Insulation Year",
        "German": "Fassadendämmung Jahr",
        "Category": "Order"
      },
      {
        "Id": 259,
        "Code": "RoofInsulationYear",
        "Type": "Language",
        "English": "Roof Insulation Year",
        "German": "Dachdämmung Jahr",
        "Category": "Order"
      },
      {
        "Id": 260,
        "Code": "SolarSystemYear",
        "Type": "Language",
        "English": "Solar System Installation Year",
        "German": "Einbau Solaranlage Jahr",
        "Category": "Order"
      },
      {
        "Id": 261,
        "Code": "TheBuilding",
        "Type": "Language",
        "English": "The Building",
        "German": "Das Gebäude",
        "Category": "Order"
      },
      {
        "Id": 262,
        "Code": "NoResidentialUnits",
        "Type": "Language",
        "English": "No. of Residential Units",
        "German": "Anzahl der Wohneinheiten",
        "Category": "Order"
      },
      {
        "Id": 263,
        "Code": "TMFEnergyCertificate",
        "Type": "Language",
        "English": "Thank you for filling details for “Energy Performace Certificate”.",
        "German": "Vielen Dank für Ihre Eingaben.",
        "Category": "Order"
      },
      {
        "Id": 264,
        "Code": "QuickActions",
        "Type": "Language",
        "English": "Quick Actions",
        "German": "Schnell-Aktion",
        "Category": "Order"
      },
      {
        "Id": 265,
        "Code": "FloatRequestReadingProperty",
        "Type": "Language",
        "English": "Request Reading (Property)",
        "German": "Sonderablesung anfordern (Liegenschaft)",
        "Category": "Order"
      },
      {
        "Id": 266,
        "Code": "FloatRequestReadingFlat",
        "Type": "Language",
        "English": "Request Reading (Flat)",
        "German": "Sonderablesung anfordern (Nutzer)",
        "Category": "Order"
      },
      {
        "Id": 267,
        "Code": "RequestEnergyCertificate",
        "Type": "Language",
        "English": "Request Energy Certificate",
        "German": "Energieausweis bestellen",
        "Category": "Order"
      },
      {
        "Id": 268,
        "Code": "AHWUsed",
        "Type": "Language",
        "English": "Amount of Hot Water Used",
        "German": "Verbrauchte Warmwassermenge",
        "Category": "Order"
      },
      {
        "Id": 269,
        "Code": "RequestDWA",
        "Type": "Language",
        "English": "Request Drinking Water Analysis",
        "German": "Trinkwasseranalyse anfordern",
        "Category": "Order"
      },
      {
        "Id": 270,
        "Code": "OrderSmokeDetectorTestFlat",
        "Type": "Language",
        "English": "Order Smoke Detector Test (Flat)",
        "German": "RWM-Prüfung beauftragen (Wohnung)",
        "Category": "Order"
      },
      {
        "Id": 271,
        "Code": "OrderSmokeDetectorTestMeter",
        "Type": "Language",
        "English": "Order Smoke Detector Test (Meter)",
        "German": "RWM-Prüfung beauftragen (Messgerät)",
        "Category": "Order"
      },
      {
        "Id": 272,
        "Code": "OfferRequest",
        "Type": "Language",
        "English": "Offer Request",
        "German": "Angebotsanfrage",
        "Category": "Order"
      },
      {
        "Id": 273,
        "Code": "CreateNewOrder",
        "Type": "Language",
        "English": "Create New Order",
        "German": "Neuen Auftrag einstellen",
        "Category": "Order"
      },
      {
        "Id": 274,
        "Code": "Home",
        "Type": "Language",
        "English": "Home",
        "German": "Dashboard",
        "Category": "Miscellaneous"
      },
      {
        "Id": 275,
        "Code": "AccountingOverview",
        "Type": "Language",
        "English": "Accounting Overview",
        "German": "Abrechnungen",
        "Category": "Miscellaneous"
      },
      {
        "Id": 276,
        "Code": "MyOrders",
        "Type": "Language",
        "English": "My Orders",
        "German": "Aufträge   ",
        "Category": "Miscellaneous"
      },
      {
        "Id": 277,
        "Code": "DocumentArchives",
        "Type": "Language",
        "English": "Document Archives",
        "German": "Dokumentenarchiv",
        "Category": "Miscellaneous"
      },
      {
        "Id": 278,
        "Code": "MyContactPeople",
        "Type": "Language",
        "English": "My Contact People",
        "German": "Ansprechpartner",
        "Category": "Miscellaneous"
      },
      {
        "Id": 279,
        "Code": "MyProfile",
        "Type": "Language",
        "English": "My Profile",
        "German": "Mein Profil",
        "Category": "Miscellaneous"
      },
      {
        "Id": 280,
        "Code": "Logout",
        "Type": "Language",
        "English": "Log out",
        "German": "Abmelden",
        "Category": "Miscellaneous"
      },
      {
        "Id": 281,
        "Code": "Searchyourproperties",
        "Type": "Language",
        "English": "Search your properties",
        "German": "Liegenschaftssuche",
        "Category": "Miscellaneous"
      },
      {
        "Id": 282,
        "Code": "OrdersinProgress",
        "Type": "Language",
        "English": "Orders in Progress",
        "German": "Aufträge in Bearbeitung",
        "Category": "Home"
      },
      {
        "Id": 283,
        "Code": "SmokeDetectorStatus",
        "Type": "Language",
        "English": "Smoke Detector Status",
        "German": "Rauchwarnmelderstatus",
        "Category": "Home"
      },
      {
        "Id": 284,
        "Code": "InvoicesPending",
        "Type": "Language",
        "English": "Invoices Pending",
        "German": "Offene Rechnungen",
        "Category": "Home"
      },
      {
        "Id": 285,
        "Code": "ContactPerson",
        "Type": "Language",
        "English": "Contact Person:",
        "German": "Ansprechpartner",
        "Category": "Home"
      },
      {
        "Id": 286,
        "Code": "EmailFormatted",
        "Type": "Language",
        "English": "E-mail:",
        "German": "E-Mail",
        "Category": "Home"
      },
      {
        "Id": 287,
        "Code": "Tel",
        "Type": "Language",
        "English": "Tel:",
        "German": "Tel:",
        "Category": "Home"
      },
      {
        "Id": 288,
        "Code": "MyContactPersons",
        "Type": "Language",
        "English": "My Contact Persons (General)",
        "German": "Ansprechpartner (Allgemein)",
        "Category": "Home"
      },
      {
        "Id": 289,
        "Code": "OfficeHours",
        "Type": "Language",
        "English": "Office Hours:",
        "German": "Geschäftszeiten:",
        "Category": "Home"
      },
      {
        "Id": 290,
        "Code": "MountingEquipment",
        "Type": "Language",
        "English": "Mounting And Measuring Equipment",
        "German": "Montage- und Messgeräte",
        "Category": "Home"
      },
      {
        "Id": 291,
        "Code": "Statements",
        "Type": "Language",
        "English": "Statements",
        "German": "Abrechnungen",
        "Category": "Home"
      },
      {
        "Id": 292,
        "Code": "Reading",
        "Type": "Language",
        "English": "Reading",
        "German": "Ablesungen",
        "Category": "Home"
      },
      {
        "Id": 293,
        "Code": "EnergyPCertificate",
        "Type": "Language",
        "English": "Energy Performance Certificate",
        "German": "Energieausweis",
        "Category": "Home"
      },
      {
        "Id": 294,
        "Code": "OffersContracts",
        "Type": "Language",
        "English": "Offers & Contracts",
        "German": "Angebote & Verträge",
        "Category": "Home"
      },
      {
        "Id": 295,
        "Code": "Tab0",
        "Type": "Language",
        "English": "Invoice Overview",
        "German": "Rechnungsübersicht",
        "Category": "DocumentArchives"
      },
      {
        "Id": 296,
        "Code": "Tab1",
        "Type": "Language",
        "English": "Accounting Documents",
        "German": "Abrechnungs-Dokumente",
        "Category": "DocumentArchives"
      },
      {
        "Id": 297,
        "Code": "Tab2",
        "Type": "Language",
        "English": "Reading Documents",
        "German": "Ablesebelege",
        "Category": "DocumentArchives"
      },
      {
        "Id": 298,
        "Code": "Tab3",
        "Type": "Language",
        "English": "Plumbing Documents",
        "German": "Montageberichte",
        "Category": "DocumentArchives"
      },
      {
        "Id": 299,
        "Code": "Tab4",
        "Type": "Language",
        "English": "Energy Certificate Documents",
        "German": "Energieausweise",
        "Category": "DocumentArchives"
      },
      {
        "Id": 300,
        "Code": "Tab5",
        "Type": "Language",
        "English": "Drinking Water Supply Documents",
        "German": "Trinkwasserunterlagen",
        "Category": "DocumentArchives"
      },
      {
        "Id": 301,
        "Code": "Tab6",
        "Type": "Language",
        "English": "All Documents",
        "German": "Alle Dokumente",
        "Category": "DocumentArchives"
      },
      {
        "Id": 302,
        "Code": "Tab7",
        "Type": "Language",
        "English": "SEPA Direct Debit Mandate",
        "German": "SEPA-Lastschriftenmandat",
        "Category": "DocumentArchives"
      },
      {
        "Id": 303,
        "Code": "Tab8",
        "Type": "Language",
        "English": "Accounting Documents - Flat",
        "German": "Abrechnungsunterlagen - Nutzer",
        "Category": "DocumentArchives"
      },
      {
        "Id": 304,
        "Code": "Pending",
        "Type": "Language",
        "English": "Pending",
        "German": "Offen",
        "Category": "Home"
      },
      {
        "Id": 305,
        "Code": "Ok",
        "Type": "Language",
        "English": "OK",
        "German": "Ok",
        "Category": "Home"
      },
      {
        "Id": 306,
        "Code": "Plumbing",
        "Type": "Language",
        "English": "Plumbing",
        "German": "Montage",
        "Category": "Home"
      },
      {
        "Id": 307,
        "Code": "Finalized",
        "Type": "Language",
        "English": "Finalized",
        "German": "Abgeschlossene Perioden",
        "Category": "Home"
      },
      {
        "Id": 308,
        "Code": "OutOfOrder",
        "Type": "Language",
        "English": "Out of Order",
        "German": "Mit Fehler",
        "Category": "Home"
      },
      {
        "Id": 309,
        "Code": "MissingData",
        "Type": "Language",
        "English": "Missing Data",
        "German": "Perioden mit fehlenden Abrechnungsdaten",
        "Category": "Home"
      },
      {
        "Id": 310,
        "Code": "AccountingLabel",
        "Type": "Language",
        "English": "Accounting",
        "German": "Abrechnung",
        "Category": "Home"
      },
      {
        "Id": 311,
        "Code": "Preferences",
        "Type": "Language",
        "English": "Preferences",
        "German": "Einstellungen",
        "Category": "Account"
      },
      {
        "Id": 312,
        "Code": "LanguagePreference",
        "Type": "Language",
        "English": "Language Preference",
        "German": "Spracheinstellung",
        "Category": "Account"
      },
      {
        "Id": 313,
        "Code": "NumberOfRowsPage",
        "Type": "Language",
        "English": "Number of rows per page",
        "German": "Anzahl der Zeilen pro Seite",
        "Category": "Account"
      },
      {
        "Id": 314,
        "Code": "English",
        "Type": "Language",
        "English": "English",
        "German": "Englisch",
        "Category": "Admin"
      },
      {
        "Id": 315,
        "Code": "German",
        "Type": "Language",
        "English": "German",
        "German": "Deutsch",
        "Category": "Admin"
      },
      {
        "Id": 316,
        "Code": "Actions",
        "Type": "Language",
        "English": "Actions",
        "German": "Aktion",
        "Category": "Admin"
      },
      {
        "Id": 317,
        "Code": "LanguageSettings",
        "Type": "Language",
        "English": "Language Settings",
        "German": "Spracheinstellungen",
        "Category": "Admin"
      },
      {
        "Id": 318,
        "Code": "SystemSettings",
        "Type": "Language",
        "English": "System Settings",
        "German": "Mein Profil",
        "Category": "Admin"
      },
      {
        "Id": 319,
        "Code": "Description",
        "Type": "Language",
        "English": "Description",
        "German": "Beschreibung",
        "Category": "Admin"
      },
      {
        "Id": 320,
        "Code": "FilterByCategory",
        "Type": "Language",
        "English": "Filter by category",
        "German": "Nach Kategorie filtern",
        "Category": "Admin"
      },
      {
        "Id": 321,
        "Code": "Edit",
        "Type": "Language",
        "English": "Edit",
        "German": "Bearbeiten",
        "Category": "Admin"
      },
      {
        "Id": 322,
        "Code": "DisplayName",
        "Type": "Language",
        "English": "Display Name",
        "German": "Anzeigename",
        "Category": "Admin"
      },
      {
        "Id": 323,
        "Code": "Value",
        "Type": "Language",
        "English": "Value",
        "German": "Wert",
        "Category": "Admin"
      },
      {
        "Id": 324,
        "Code": "Code",
        "Type": "Language",
        "English": "Code",
        "German": "Code",
        "Category": "Admin"
      },
      {
        "Id": 325,
        "Code": "Category",
        "Type": "Language",
        "English": "Category",
        "German": "Kategorie",
        "Category": "Admin"
      },
      {
        "Id": 326,
        "Code": "SeeAllMeters",
        "Type": "Language",
        "English": "See All Meters of the Building",
        "German": "Alle Messgeräte des Gebäudes anzeigen",
        "Category": "StockOverview"
      },
      {
        "Id": 327,
        "Code": "AppSearchBarFlat",
        "Type": "Language",
        "English": "Search (User No., Username, Location)",
        "German": "Suche (Nutzernummer, Nutzername, Lage)",
        "Category": "StockOverview"
      },
      {
        "Id": 328,
        "Code": "AppSearchBarMeter",
        "Type": "Language",
        "English": "Meter Serial No., Meter Type, Location",
        "German": "Seriennummer, Messgerätetyp, Einbauort",
        "Category": "StockOverview"
      },
      {
        "Id": 329,
        "Code": "AppSearchBarProperty",
        "Type": "Language",
        "English": "Search (Teha LG No., Admin LG No., Address)",
        "German": "Suche (Teha LG Nr., Admin LG Nr., Adresse)",
        "Category": "StockOverview"
      },
      {
        "Id": 330,
        "Code": "OSVal0",
        "Type": "Language",
        "English": "OPEN",
        "German": "Offen ",
        "Category": "Lookup"
      },
      {
        "Id": 331,
        "Code": "OSVal1",
        "Type": "Language",
        "English": "GENERATED",
        "German": "GENERIERT",
        "Category": "Lookup"
      },
      {
        "Id": 332,
        "Code": "OSVal2",
        "Type": "Language",
        "English": "PLAN",
        "German": "PLANEN",
        "Category": "Lookup"
      },
      {
        "Id": 333,
        "Code": "OSVal3",
        "Type": "Language",
        "English": "CANCEL",
        "German": "Stornieren",
        "Category": "Lookup"
      },
      {
        "Id": 334,
        "Code": "OSVal4",
        "Type": "Language",
        "English": "FINISH",
        "German": "Abschließen",
        "Category": "Lookup"
      },
      {
        "Id": 335,
        "Code": "TypedrinkingWaterSampling",
        "Type": "Language",
        "English": "drinkingWaterSampling",
        "German": "Trinkwasserprobenahme",
        "Category": "Lookup"
      },
      {
        "Id": 336,
        "Code": "TypeenergyCertificate",
        "Type": "Language",
        "English": "energyCertificate",
        "German": "Energieausweis",
        "Category": "Lookup"
      },
      {
        "Id": 337,
        "Code": "TypeinterimReading",
        "Type": "Language",
        "English": "interimReading",
        "German": "Zwischenablesung",
        "Category": "Lookup"
      },
      {
        "Id": 338,
        "Code": "Typeoffer",
        "Type": "Language",
        "English": "offer",
        "German": "Angebot",
        "Category": "Lookup"
      },
      {
        "Id": 339,
        "Code": "Typeplumbing",
        "Type": "Language",
        "English": "plumbing",
        "German": "Montage",
        "Category": "Lookup"
      },
      {
        "Id": 340,
        "Code": "TypepostInterimReading",
        "Type": "Language",
        "English": "postInterimReading",
        "German": "Zwischenablesung",
        "Category": "Lookup"
      },
      {
        "Id": 341,
        "Code": "Typereading",
        "Type": "Language",
        "English": "reading",
        "German": "Ablesung",
        "Category": "Lookup"
      },
      {
        "Id": 342,
        "Code": "TypesmokeDetectorTest",
        "Type": "Language",
        "English": "smokeDetectorTest",
        "German": "Rauchwarnmelderprüfung",
        "Category": "Lookup"
      },
      {
        "Id": 343,
        "Code": "Warning",
        "Type": "Language",
        "English": "Warning",
        "German": "Warnung",
        "Category": "Lookup"
      },
      {
        "Id": 344,
        "Code": "Error",
        "Type": "Language",
        "English": "Error",
        "German": "Fehler",
        "Category": "Lookup"
      },
      {
        "Id": 345,
        "Code": "Not_pending",
        "Type": "Language",
        "English": "NOT_PENDING",
        "German": "Nichts offen",
        "Category": "Lookup"
      },
      {
        "Id": 346,
        "Code": "OPEN",
        "Type": "Language",
        "English": "OPEN",
        "German": "Offen ",
        "Category": "Lookup"
      },
      {
        "Id": 347,
        "Code": "PLAN",
        "Type": "Language",
        "English": "PLAN",
        "German": "Eingeplant",
        "Category": "Lookup"
      },
      {
        "Id": 348,
        "Code": "FINISHED",
        "Type": "Language",
        "English": "FINISHED",
        "German": "Abgeschlossen",
        "Category": "Lookup"
      },
      {
        "Id": 349,
        "Code": "Wait_data",
        "Type": "Language",
        "English": "WAIT_DATA",
        "German": "Auf Daten wartend",
        "Category": "Lookup"
      },
      {
        "Id": 350,
        "Code": "In_preparation",
        "Type": "Language",
        "English": "IN_PREPARATION",
        "German": "In Arbeit",
        "Category": "Lookup"
      },
      {
        "Id": 351,
        "Code": "DOWNLOADED",
        "Type": "Language",
        "English": "DOWNLOADED",
        "German": "Heruntergeladen",
        "Category": "Lookup"
      },
      {
        "Id": 352,
        "Code": "FINISH",
        "Type": "Language",
        "English": "FINISH",
        "German": "Abgeschlossen",
        "Category": "Lookup"
      },
      {
        "Id": 353,
        "Code": "Paid",
        "Type": "Language",
        "English": "Paid",
        "German": "Bezahlt",
        "Category": "DocumentArchives"
      },
      {
        "Id": 354,
        "Code": "UnPaid",
        "Type": "Language",
        "English": "UnPaid",
        "German": "Unbezahlt",
        "Category": "DocumentArchives"
      },
      {
        "Id": 355,
        "Code": "ShortOverview",
        "Type": "Language",
        "English": "Short Overview",
        "German": "Kurzübersicht",
        "Category": "StockOverview"
      },
      {
        "Id": 356,
        "Code": "ChangePassword",
        "Type": "Language",
        "English": "Change Password",
        "German": "Passwort ändern",
        "Category": "Account"
      },
      {
        "Id": 357,
        "Code": "NewMemberDetail",
        "Type": "Language",
        "English": "New Member Details",
        "German": "Neues Teammitglied - Eingaben",
        "Category": "Account"
      },
      {
        "Id": 358,
        "Code": "Assign",
        "Type": "Language",
        "English": "Assign",
        "German": "Zuordnen",
        "Category": "Account"
      },
      {
        "Id": 359,
        "Code": "Add",
        "Type": "Language",
        "English": "Add",
        "German": "Hinzufügen",
        "Category": "Account"
      },
      {
        "Id": 360,
        "Code": "MeterStatus",
        "Type": "Language",
        "English": "Meter Status",
        "German": "Messgerätestatus",
        "Category": "StockOverview"
      },
      {
        "Id": 361,
        "Code": "Floor",
        "Type": "Language",
        "English": "Floor",
        "German": "Etage",
        "Category": "StockOverview"
      },
      {
        "Id": 362,
        "Code": "FloatRequestReadingMeter",
        "Type": "Language",
        "English": "Request Reading (Meter)",
        "German": "Sonderablesung anfordern (Messgerät)",
        "Category": "Order"
      },
      {
        "Id": 363,
        "Code": "OrderReadingSummary",
        "Type": "Language",
        "English": "Order Reading -- Summary",
        "German": "Sonderablesung anfordern - Zusammenfassung",
        "Category": "Order"
      },
      {
        "Id": 364,
        "Code": "OrderPlumbingSummary",
        "Type": "Language",
        "English": "Order Plumbing -- Summary",
        "German": "Montage anfordern - Zusammenfassung",
        "Category": "Order"
      },
      {
        "Id": 365,
        "Code": "OrderSmokeDetectorTestSummary",
        "Type": "Language",
        "English": "Order Smoke Detector Test -- Summary",
        "German": "Rauchwarnmelderprüfung anfordern - Zusammenfassung",
        "Category": "Order"
      },
      {
        "Id": 366,
        "Code": "SaveForUser",
        "Type": "Language",
        "English": "Save For User",
        "German": "Nutzer speichern",
        "Category": "Account"
      },
      {
        "Id": 367,
        "Code": "InvoiceDoc",
        "Type": "Language",
        "English": "Invoice",
        "German": "Rechnungen",
        "Category": "DocumentArchives"
      },
      {
        "Id": 368,
        "Code": "AccountingDoc",
        "Type": "Language",
        "English": "Accounting",
        "German": "Abrechnungen",
        "Category": "DocumentArchives"
      },
      {
        "Id": 369,
        "Code": "ReadingDoc",
        "Type": "Language",
        "English": "Reading",
        "German": "Ablesungen",
        "Category": "DocumentArchives"
      },
      {
        "Id": 370,
        "Code": "PlumbingDoc",
        "Type": "Language",
        "English": "Plumbing",
        "German": "Montagen",
        "Category": "DocumentArchives"
      },
      {
        "Id": 371,
        "Code": "EnergyDoc",
        "Type": "Language",
        "English": "Energy Certificates",
        "German": "Energieausweis",
        "Category": "DocumentArchives"
      },
      {
        "Id": 372,
        "Code": "DrinkingDoc",
        "Type": "Language",
        "English": "Drinking Samples",
        "German": "Trinkwasserbeprobung",
        "Category": "DocumentArchives"
      },
      {
        "Id": 373,
        "Code": "CouldNotDownload",
        "Type": "Language",
        "English": "Could Not Download Document",
        "German": "Das Dokument konnte nicht heruntergeladen werden",
        "Category": "Miscellaneous"
      },
      {
        "Id": 374,
        "Code": "WhyInspectionQuestion",
        "Type": "Language",
        "English": "Why is the system subject to inspection?",
        "German": "Die Anlage ist prüfungspflichtig, aufgrund: ",
        "Category": "Order"
      },
      {
        "Id": 375,
        "Code": "OrderNewBuilding",
        "Type": "Language",
        "English": "Order Drinking Water Analysis - New Building",
        "German": "Trinkwasseranalyse anfordern",
        "Category": "Order"
      },
      {
        "Id": 376,
        "Code": "NoPreviousData",
        "Type": "Language",
        "English": "Looks like there’s no previous order data available!",
        "German": "Bisher sind keine Daten vorhanden",
        "Category": "Order"
      },
      {
        "Id": 377,
        "Code": "CreateAnOrder",
        "Type": "Language",
        "English": " Create an Order",
        "German": "Auftrag einstellen",
        "Category": "Order"
      },
      {
        "Id": 378,
        "Code": "SampleAvaliable",
        "Type": "Language",
        "English": "Are sampling valves available?",
        "German": "Sind Probenahmeventile vorhanden?",
        "Category": "Order"
      },
      {
        "Id": 379,
        "Code": "AdvanceInspection",
        "Type": "Language",
        "English": "Would you like an inspection in advance?",
        "German": "Wünschen Sie eine Begehung im Voraus?",
        "Category": "Order"
      },
      {
        "Id": 380,
        "Code": "WhichApartment",
        "Type": "Language",
        "English": "Which apartment should be checked?",
        "German": "Bei welcher Wohnung soll geprüft werden?",
        "Category": "Order"
      },
      {
        "Id": 381,
        "Code": "ExtractionPoints",
        "Type": "Language",
        "English": "Extraction Points",
        "German": "Entnahmeort",
        "Category": "Order"
      },
      {
        "Id": 382,
        "Code": "SelectTap",
        "Type": "Language",
        "English": "Please select a tap.",
        "German": "Bitte wählen Sie die Zapfstelle aus.",
        "Category": "Order"
      },
      {
        "Id": 383,
        "Code": "YesFlow",
        "Type": "Language",
        "English": "Yes, in flow",
        "German": "Ja, im Vorlauf",
        "Category": "Order"
      },
      {
        "Id": 384,
        "Code": "YesReturn",
        "Type": "Language",
        "English": "Yes, on the return",
        "German": "Ja, im Rücklauf",
        "Category": "Order"
      },
      {
        "Id": 385,
        "Code": "NoValves",
        "Type": "Language",
        "English": "There are no valves",
        "German": "Es gibt keine Ventile",
        "Category": "Order"
      },
      {
        "Id": 386,
        "Code": "WaterSummary",
        "Type": "Language",
        "English": "Order Drinking Water Analysis - Summary",
        "German": "Trinkwasseranalyse anfordern - Zusammenfassung",
        "Category": "Order"
      },
      {
        "Id": 387,
        "Code": "StorageValumeLiters",
        "Type": "Language",
        "English": "Storage volume> 400 liters",
        "German": "Speichervolumen> 400 Liter",
        "Category": "Order"
      },
      {
        "Id": 388,
        "Code": "LineLitters",
        "Type": "Language",
        "English": "Line content> 3 liters",
        "German": "Leitungsinhalt> 3 Liter",
        "Category": "Order"
      },
      {
        "Id": 389,
        "Code": "SamePrimaryAddress",
        "Type": "Language",
        "English": "Same as Primary Address",
        "German": "Gleich wie Erstadresse",
        "Category": "Account"
      },
      {
        "Id": 390,
        "Code": "SamePrimaryEmail",
        "Type": "Language",
        "English": "Same as Primary Email",
        "German": "Gleich wie Erst-E-Mail-Adresse",
        "Category": "Account"
      },
      {
        "Id": 391,
        "Code": "Salutation",
        "Type": "Language",
        "English": "Salutation",
        "German": "Anrede",
        "Category": "Account"
      },
      {
        "Id": 392,
        "Code": "SaveForThisProperty",
        "Type": "Language",
        "English": "Save For this Property",
        "German": "Für diese Liegenschaft speichern",
        "Category": "Account"
      },
      {
        "Id": 393,
        "Code": "EditTeamMember",
        "Type": "Language",
        "English": "Edit Team Member",
        "German": "Bearbeiten",
        "Category": "Account"
      },
      {
        "Id": 394,
        "Code": "Update",
        "Type": "Language",
        "English": "Update",
        "German": "Update",
        "Category": "Account"
      },
      {
        "Id": 395,
        "Code": "SaveNewConfigurations",
        "Type": "Language",
        "English": "Save New Configurations?",
        "German": "Einstellungen speichern?",
        "Category": "Account"
      },
      {
        "Id": 396,
        "Code": "ConfigurationsOverwriteMessage",
        "Type": "Language",
        "English": "By clicking on YES, all individual building configurations will be overwritten. By clicking on NO, only User Level will be updated",
        "German": "Mit \"Ja\" werden alle individuellen Liegenschaftseinstellungen überschrieben, mit \"Nein\" bleiben sie erhalten.",
        "Category": "Account"
      },
      {
        "Id": 397,
        "Code": "OneAap",
        "Type": "Language",
        "English": "One Email for All",
        "German": "Eine E-Mail mit allen Rechng. aller LGs ",
        "Category": "Account"
      },
      {
        "Id": 398,
        "Code": "OneAep",
        "Type": "Language",
        "English": "One per Property",
        "German": "Eine E-Mail mit allen Rechng. einer LG",
        "Category": "Account"
      },
      {
        "Id": 399,
        "Code": "OnePi",
        "Type": "Language",
        "English": "One per Invoice",
        "German": "Eine E-Mail pro Rechnung",
        "Category": "Account"
      },
      {
        "Id": 400,
        "Code": "OneAapTooltip",
        "Type": "Language",
        "English": "One Email for All Invoices of All Properties",
        "German": "Eine E-Mail mit allen Rechng. aller LGs",
        "Category": "Account"
      },
      {
        "Id": 401,
        "Code": "OneAepTooltip",
        "Type": "Language",
        "English": "One Email for All Invoices for each Property",
        "German": "Eine E-Mail mit allen Rechng. einer LG",
        "Category": "Account"
      },
      {
        "Id": 402,
        "Code": "OnePiTooltip",
        "Type": "Language",
        "English": "One Email for each Invoice",
        "German": "Eine E-Mail pro Rechnung",
        "Category": "Account"
      },
      {
        "Id": 403,
        "Code": "AppSearchBarMyTeams",
        "Type": "Language",
        "English": "Search (User Name, Teha LG No., Admin LG No.)",
        "German": "Suche (Nutzername, Teha LG Nr.,  Admin LG Nr.)",
        "Category": "Account"
      },
      {
        "Id": 404,
        "Code": "HotWaterGeneration",
        "Type": "Language",
        "English": "Hot water generation included?",
        "German": "Warmwassererzeugung enthalten?",
        "Category": "Order"
      },
      {
        "Id": 405,
        "Code": "RequiredMeters",
        "Type": "Language",
        "English": "Required Meters",
        "German": "Erforderliche Messgeräte",
        "Category": "Order"
      },
      {
        "Id": 406,
        "Code": "PrimaryHeading",
        "Type": "Language",
        "English": "Primary Details",
        "German": "Erstadresse",
        "Category": "Account"
      },
      {
        "Id": 407,
        "Code": "SecondaryHeading",
        "Type": "Language",
        "English": "Secondary Details",
        "German": "Zweitadresse",
        "Category": "Account"
      },
      {
        "Id": 408,
        "Code": "AddNewEmail",
        "Type": "Language",
        "English": "Add New Email Address",
        "German": "E-Mail Adresse hinzufügen",
        "Category": "Account"
      },
      {
        "Id": 409,
        "Code": "AdditionalEmail",
        "Type": "Language",
        "English": "Additional Email",
        "German": "Zusätzliche E-Mail",
        "Category": "Account"
      },
      {
        "Id": 410,
        "Code": "CertificateCostMsg",
        "Type": "Language",
        "English": "There is a charge for ordering the energy certificate . I agree to pay those charges according to the",
        "German": "Hiermit bestätige ich die Bestellung eines verbrauchsorientierten Energieausweis zum Preis von 89,95 € netto.",
        "Category": "Order"
      },
      {
        "Id": 411,
        "Code": "MeasurementTake",
        "Type": "Language",
        "English": "Measurement takes place via WWZ?",
        "German": "Die Messung erfolgt über einen WWZ?",
        "Category": "Order"
      },
      {
        "Id": 412,
        "Code": "YouHaveOrder",
        "Type": "Language",
        "English": "You have ordered",
        "German": "Sie haben bestellt",
        "Category": "Order"
      },
      {
        "Id": 413,
        "Code": "RequestMeter",
        "Type": "Language",
        "English": "request for the following meter:",
        "German": "Anfrage für folgende Messgeräte:",
        "Category": "Order"
      },
      {
        "Id": 414,
        "Code": "PlumbingReason",
        "Type": "Language",
        "English": "Plumbing Reason",
        "German": "Montagegrund",
        "Category": "Order"
      },
      {
        "Id": 415,
        "Code": "PlumbingCostIndMsg",
        "Type": "Language",
        "English": "We confirm that we will bear the costs, provided that the measuring device is not defective or there is no warranty claim.",
        "German": "Wir bestätigen, dass wir die Kosten tragen, sofern das Messgerät nicht defekt ist oder kein Gewährleistungsanspruch besteht.",
        "Category": "Order"
      },
      {
        "Id": 416,
        "Code": "DrinkingWaterPropertyMsg",
        "Type": "Language",
        "English": "You have ordered “Drinking Water Analysis“ for the following property(s):",
        "German": "Sie haben eine Trinkwasseranalyse für folgende Liegenschaft bestellt:",
        "Category": "Order"
      },
      {
        "Id": 417,
        "Code": "OrderDrinkingWaterAnalysis",
        "Type": "Language",
        "English": "Order Drinking Water Analysis",
        "German": "Trinkwasseranalyse bestellen",
        "Category": "Order"
      },
      {
        "Id": 418,
        "Code": "DrinkingWaterCostIndMsg",
        "Type": "Language",
        "English": "The comissioning of the drinking water sampling is subject to a",
        "German": "Die Bestellung der Trinkwasseranalyse ist kostenpflichtig",
        "Category": "Order"
      },
      {
        "Id": 419,
        "Code": "Fee",
        "Type": "Language",
        "English": "fee.",
        "German": "Gebühr",
        "Category": "Order"
      },
      {
        "Id": 420,
        "Code": "RentNo",
        "Type": "Language",
        "English": "Rent No.",
        "German": "Wohnungs-Nr. ",
        "Category": "DocumentArchives"
      },
      {
        "Id": 421,
        "Code": "SmokeNotAvailTooltip",
        "Type": "Language",
        "English": "This User does not have any Smoke Detectors Installed",
        "German": "In dieser Nutzeinheit sind keine RWM installiert.",
        "Category": "Order"
      },
      {
        "Id": 422,
        "Code": "SelectAMeter",
        "Type": "Language",
        "English": "Select a Meter",
        "German": "Wählen Sie ein Messgeräte aus",
        "Category": "Order"
      },
      {
        "Id": 423,
        "Code": "SelectAProperty",
        "Type": "Language",
        "English": "Select a Property",
        "German": "Wählen Sie eine Liegenschaft aus",
        "Category": "Order"
      },
      {
        "Id": 424,
        "Code": "ContinueToFlats",
        "Type": "Language",
        "English": "Continue to Flats",
        "German": "Weiter zu den Wohnungen",
        "Category": "Order"
      },
      {
        "Id": 425,
        "Code": "CancelOrder",
        "Type": "Language",
        "English": "Cancel Order?",
        "German": "Auftrag löschen",
        "Category": "Order"
      },
      {
        "Id": 426,
        "Code": "SureCancelMsg",
        "Type": "Language",
        "English": "Are you sure you want to Cancel?",
        "German": "Wollen Sie den Auftrag wirklich löschen?",
        "Category": "Order"
      },
      {
        "Id": 427,
        "Code": "OrderCancelled",
        "Type": "Language",
        "English": "Order Cancelled",
        "German": "Auftrag abgebrochen",
        "Category": "Order"
      },
      {
        "Id": 428,
        "Code": "CouldNotCancel",
        "Type": "Language",
        "English": "Could Not Cancel",
        "German": "Konnte nicht abgebrochen werden",
        "Category": "Order"
      },
      {
        "Id": 429,
        "Code": "SmokeNotAvailTooltipProperty",
        "Type": "Language",
        "English": "This Property does not have any Smoke Detectors Installed",
        "German": "In dieser Liegenschaft sind keine Messgeräte installier",
        "Category": "Order"
      },
      {
        "Id": 430,
        "Code": "Reset",
        "Type": "Language",
        "English": "Reset",
        "German": "Zurücksetzen",
        "Category": "Accounting"
      },
      {
        "Id": 431,
        "Code": "DTATooltip",
        "Type": "Language",
        "English": "In case you want to activate DTA, please contact the Accounting department, Tel: 06252-93800-33 or E-Mail: abrechnung@teha-wd.de",
        "German": "Falls Sie das Datenträgeraustauschverfahren aktivieren möchten kontaktieren Sie uns unter Tel: 06252 - 93800 -33 oder E-Mail: abrechnung@teha-wd.de. ",
        "Category": "Accounting"
      },
      {
        "Id": 432,
        "Code": "AccountingStatusOverview",
        "Type": "Language",
        "English": "Accounting - Status Overview",
        "German": "Statusübersicht Abrechnungen",
        "Category": "Accounting"
      },
      {
        "Id": 433,
        "Code": "AccountingEnterUserData",
        "Type": "Language",
        "English": "Accounting - Enter User Data",
        "German": "Eingabe Nutzerdaten",
        "Category": "Accounting"
      },
      {
        "Id": 434,
        "Code": "TotalBill",
        "Type": "Language",
        "English": "Total Bill",
        "German": "Gesamtbetrag",
        "Category": "Accounting"
      },
      {
        "Id": 435,
        "Code": "FlatUserNo",
        "Type": "Language",
        "English": "Flat/ User No.",
        "German": "Nutzer-Nr.",
        "Category": "Accounting"
      },
      {
        "Id": 436,
        "Code": "NoOfPeople",
        "Type": "Language",
        "English": "No. of People",
        "German": "Anzahl Personen",
        "Category": "Accounting"
      },
      {
        "Id": 437,
        "Code": "AdvancePayments",
        "Type": "Language",
        "English": "Advance Payments",
        "German": "Vorauszahlungen",
        "Category": "Accounting"
      },
      {
        "Id": 438,
        "Code": "HistoricEntries",
        "Type": "Language",
        "English": "Historic Entries",
        "German": "Historie",
        "Category": "Accounting"
      },
      {
        "Id": 439,
        "Code": "CalcKeyHotWater",
        "Type": "Language",
        "English": "Calc. Key (Hot Water)",
        "German": "Umlageschlüssel m² Warmwasser",
        "Category": "Accounting"
      },
      {
        "Id": 440,
        "Code": "CalcKeyHeating",
        "Type": "Language",
        "English": "Calc. Key (Heating)",
        "German": "Umlageschlüssel m² Heizung",
        "Category": "Accounting"
      },
      {
        "Id": 441,
        "Code": "OwnerData",
        "Type": "Language",
        "English": "Owner Data",
        "German": "Daten Eigentümer",
        "Category": "Accounting"
      },
      {
        "Id": 442,
        "Code": "AccountingSummaryRelease",
        "Type": "Language",
        "English": "Summary & Release",
        "German": "Zusammenfassung & Freigabe",
        "Category": "Accounting"
      },
      {
        "Id": 443,
        "Code": "EnergyCost",
        "Type": "Language",
        "English": "Energy Cost",
        "German": "Energiekosten",
        "Category": "Accounting"
      },
      {
        "Id": 444,
        "Code": "YourEntries",
        "Type": "Language",
        "English": "Your Entries",
        "German": "Ihre Eingaben",
        "Category": "Accounting"
      },
      {
        "Id": 445,
        "Code": "CostConcept",
        "Type": "Language",
        "English": "Cost Concept",
        "German": "Kostenart",
        "Category": "Accounting"
      },
      {
        "Id": 446,
        "Code": "Units",
        "Type": "Language",
        "English": "Units",
        "German": "Einheiten",
        "Category": "Accounting"
      },
      {
        "Id": 447,
        "Code": "Consumption",
        "Type": "Language",
        "English": "Consumption",
        "German": "Verbrauch",
        "Category": "Accounting"
      },
      {
        "Id": 448,
        "Code": "AmountGross",
        "Type": "Language",
        "English": "Amount (Gross)",
        "German": "Brutto-Betrag  [€]",
        "Category": "Accounting"
      },
      {
        "Id": 449,
        "Code": "VAT",
        "Type": "Language",
        "English": "VAT",
        "German": "Mwst.",
        "Category": "Accounting"
      },
      {
        "Id": 450,
        "Code": "TotalAmount",
        "Type": "Language",
        "English": "Total Amount",
        "German": "Gesamtbetrag",
        "Category": "Accounting"
      },
      {
        "Id": 451,
        "Code": "TehaEntries",
        "Type": "Language",
        "English": "TEHA Entries",
        "German": "TEHA Eingaben",
        "Category": "Accounting"
      },
      {
        "Id": 452,
        "Code": "UserDataChanges",
        "Type": "Language",
        "English": "User Data(No. of User changes)",
        "German": "Anzahl an Nutzerwechsel: ",
        "Category": "Accounting"
      },
      {
        "Id": 453,
        "Code": "HeatingCost",
        "Type": "Language",
        "English": "Heating Cost",
        "German": "Heiznebenkosten",
        "Category": "Accounting"
      },
      {
        "Id": 454,
        "Code": "BackAccountingOverview",
        "Type": "Language",
        "English": "Back to Accounting Overview",
        "German": "Zurück zur Abrechnungsübersicht",
        "Category": "Accounting"
      },
      {
        "Id": 455,
        "Code": "Previous",
        "Type": "Language",
        "English": "Previous",
        "German": "Zurück",
        "Category": "Accounting"
      },
      {
        "Id": 456,
        "Code": "TermsConditions",
        "Type": "Language",
        "English": "Terms & Conditions:",
        "German": "Allgemeine Geschäftsbedingungen",
        "Category": "Accounting"
      },
      {
        "Id": 457,
        "Code": "CompletenessCheck",
        "Type": "Language",
        "English": "I hereby confirm the completeness of data.",
        "German": "Ich bestätige hiermit die Vollständigkeit der Daten.",
        "Category": "Accounting"
      },
      {
        "Id": 458,
        "Code": "AccountingCostCheck",
        "Type": "Language",
        "English": "The order of the individual cost categories is subject to a fee. The prices can be taken from the price list.",
        "German": "Ich habe zur Kenntnis genommen, dass die Abrechnung der Kostenarten gebührenpflichtig ist.",
        "Category": "Accounting"
      },
      {
        "Id": 459,
        "Code": "ChargesShift",
        "Type": "Language",
        "English": "Do you want to shift these charges for Smoke Detector?",
        "German": "Mietgebühren für Rauchwarnmelder umlegen",
        "Category": "Accounting"
      },
      {
        "Id": 460,
        "Code": "ShiftUserCharges",
        "Type": "Language",
        "English": "Do you want to shift these charges for User Change?",
        "German": "Nutzerwechselgebühren umlegen",
        "Category": "Accounting"
      },
      {
        "Id": 461,
        "Code": "ShiftRepairCharges",
        "Type": "Language",
        "English": "Do you want to shift these charges for Repair?",
        "German": "Gebühren für Reparaturen umlege",
        "Category": "Accounting"
      },
      {
        "Id": 462,
        "Code": "",
        "Type": "Language",
        "English": "Heater (100%)",
        "German": "Heizung",
        "Category": "Accounting"
      },
      {
        "Id": 463,
        "Code": "ConsumptionPercent",
        "Type": "Language",
        "English": "Consumption (%)",
        "German": "Verbrauch (%)",
        "Category": "Accounting"
      },
      {
        "Id": 464,
        "Code": "HotWatePercent",
        "Type": "Language",
        "English": "Hot Water (100%)",
        "German": "Warmwasser",
        "Category": "Accounting"
      },
      {
        "Id": 465,
        "Code": "BasicCostPercent",
        "Type": "Language",
        "English": "Basic Cost (%)",
        "German": "Grundkosten (%)",
        "Category": "Accounting"
      },
      {
        "Id": 466,
        "Code": "BoilerTemperature",
        "Type": "Language",
        "English": "Avg. Boiler Temperature (°C)",
        "German": "Durchschnittliche Boilertemperatur [C]",
        "Category": "Accounting"
      },
      {
        "Id": 467,
        "Code": "ConsuptionDetailHeading",
        "Type": "Language",
        "English": "ACCORDING TO § 7 ABS. 2 HEATING COST REGULATION: Our users should receive their individual consumption analysis with the heating bill. From the current billing period, as provided in Section 7 (2) of the Heating Costs Ordinance, create a consumption analysis that takes into account the development of the costs for heating and hot water supply over the past three years. The costs amount to 4.95 euros net per living unit and are according to § 7Abs. 2 HKVO apportionable.",
        "German": "Unsere Nutzer sollen mit der Heizkostenabrechnung ihre individuelle Verbrauchsanalyse erhalten. Erstellen Sie ab dem aktuellen Abrechnungszeitraum, wie im § 7 Abs. 2 derHeizkostenverordnung vorgesehen, eine Verbrauchsanalyse, die die Entwicklung der Kosten für Heizwärme- und Warmwasserversorgung der vergangenen drei Jahre berücksichtigt.Die Kosten belaufen sich auf 6,25 Euro netto pro Wohneinheit und sind nach § 7Abs. 2 HKVO umlagefähig.Bedenken Sie: Eine um 1 Grad reduzierte Raumtemperatur spart bis zu 6% an Energie.",
        "Category": "Accounting"
      },
      {
        "Id": 468,
        "Code": "AccountingOwnerData",
        "Type": "Language",
        "English": "Accounting - Enter Owner Data",
        "German": "Eingabe Eigentümerdaten",
        "Category": "Accounting"
      },
      {
        "Id": 469,
        "Code": "SaveBackUserData",
        "Type": "Language",
        "English": "Save & Back User Data",
        "German": "Speicher und zurück zu den Nutzerdaten",
        "Category": "Accounting"
      },
      {
        "Id": 470,
        "Code": "All",
        "Type": "Language",
        "English": "All",
        "German": "Alle",
        "Category": "Accounting"
      },
      {
        "Id": 471,
        "Code": "AccountingDataExchange",
        "Type": "Language",
        "English": "Accounting - Data Exchange",
        "German": "Datenträgeraustausch",
        "Category": "Accounting"
      },
      {
        "Id": 472,
        "Code": "AccountingEditData",
        "Type": "Language",
        "English": "Accounting - Edit Data",
        "German": "Bearbeiten",
        "Category": "Accounting"
      },
      {
        "Id": 473,
        "Code": "PropertyData",
        "Type": "Language",
        "English": "Property Data",
        "German": "Liegenschaftsdaten",
        "Category": "Accounting"
      },
      {
        "Id": 474,
        "Code": "SearchCostConcept",
        "Type": "Language",
        "English": "Search (Cost Concept)",
        "German": "Suche (Kostenart)",
        "Category": "Accounting"
      },
      {
        "Id": 475,
        "Code": "CostData",
        "Type": "Language",
        "English": "Cost Data",
        "German": "Kostendaten",
        "Category": "Accounting"
      },
      {
        "Id": 476,
        "Code": "UserData",
        "Type": "Language",
        "English": "User Data",
        "German": "Nutzerdaten",
        "Category": "Accounting"
      },
      {
        "Id": 477,
        "Code": "Enteries",
        "Type": "Language",
        "English": "Enteries",
        "German": "Bearbeitete Kostenart(en)",
        "Category": "Accounting"
      },
      {
        "Id": 478,
        "Code": "NetCost",
        "Type": "Language",
        "English": "Net Cost",
        "German": "Nettokosten",
        "Category": "Accounting"
      },
      {
        "Id": 479,
        "Code": "NetAmount",
        "Type": "Language",
        "English": "Net Amount",
        "German": "Netto-Betrag [€]",
        "Category": "Accounting"
      },
      {
        "Id": 480,
        "Code": "LastConsumption",
        "Type": "Language",
        "English": "Last Consumption",
        "German": "Letztjähriger Verbrauch",
        "Category": "Accounting"
      },
      {
        "Id": 481,
        "Code": "UploadInvoice",
        "Type": "Language",
        "English": "Upload Invoice",
        "German": "Upload",
        "Category": "Accounting"
      },
      {
        "Id": 482,
        "Code": "EnergyCostEnteredOilPalletsMsg",
        "Type": "Language",
        "English": "You have entered Energy Cost for Oil Pallets",
        "German": "Geben Sie die noch fehlenden Daten für Anfangs- und Endbestand ein",
        "Category": "Accounting"
      },
      {
        "Id": 483,
        "Code": "PleaseFillTheFollowingMsg",
        "Type": "Language",
        "English": "Please fill the following",
        "German": "Bitte füllen Sie nachfolgendes aus",
        "Category": "Accounting"
      },
      {
        "Id": 484,
        "Code": "OpeningBalanceQty",
        "Type": "Language",
        "English": "Opening Balance (Qty.)",
        "German": "Anfangsbestand (Menge)",
        "Category": "Accounting"
      },
      {
        "Id": 485,
        "Code": "ClosingStock",
        "Type": "Language",
        "English": "Closing Stock",
        "German": "Endbestand",
        "Category": "Accounting"
      },
      {
        "Id": 486,
        "Code": "OpeningBalanceGross",
        "Type": "Language",
        "English": "Opening Balance (Gross)",
        "German": "Anfangsbestand (Betrag)",
        "Category": "Accounting"
      },
      {
        "Id": 487,
        "Code": "EnergyCostEnteredLiquidGasMsg",
        "Type": "Language",
        "English": "You have entered Energy Cost for Liquid Gas",
        "German": "Geben Sie die noch fehlenden Daten für Anfangs- und Endbestand ein",
        "Category": "Accounting"
      },
      {
        "Id": 488,
        "Code": "HouseCost",
        "Type": "Language",
        "English": "House Cost",
        "German": "Hausnebenkosten",
        "Category": "Accounting"
      },
      {
        "Id": 489,
        "Code": "WageShare",
        "Type": "Language",
        "English": "Wage Share",
        "German": "Lohnanteil [€]",
        "Category": "Accounting"
      },
      {
        "Id": 490,
        "Code": "CalculationKey",
        "Type": "Language",
        "English": "Calculation Key",
        "German": "Umlageschlüssel",
        "Category": "Accounting"
      },
      {
        "Id": 491,
        "Code": "GeneralElectricityIncludedMsg",
        "Type": "Language",
        "English": "Is the general electricity included in heating electricity?",
        "German": "Allgemeinstrom inklusive Heizungsstrom:",
        "Category": "Accounting"
      },
      {
        "Id": 492,
        "Code": "WaterConsumption",
        "Type": "Language",
        "English": "Water Consumption",
        "German": "Wasserverbrauch",
        "Category": "Accounting"
      },
      {
        "Id": 493,
        "Code": "WaterWasteWater",
        "Type": "Language",
        "English": "Water/Waste Water",
        "German": "Wasser/Abwasser",
        "Category": "Accounting"
      },
      {
        "Id": 494,
        "Code": "AdditionalHeatingCost",
        "Type": "Language",
        "English": "Additional Heating Cost",
        "German": "Zusatzkosten Heizung",
        "Category": "Accounting"
      },
      {
        "Id": 495,
        "Code": "AdditionalHotWaterCost",
        "Type": "Language",
        "English": "Additional Hot Water Cost",
        "German": "Zusatzkosten Warmwasser",
        "Category": "Accounting"
      },
      {
        "Id": 496,
        "Code": "CostDeletedSuccessfully",
        "Type": "Language",
        "English": "Cost Deleted Successfully",
        "German": "Kosten erfolgreich gelöscht",
        "Category": "Accounting"
      },
      {
        "Id": 497,
        "Code": "ErrorFound",
        "Type": "Language",
        "English": "Error Found",
        "German": "Ein Fehler ist aufgetreten",
        "Category": "Accounting"
      },
      {
        "Id": 498,
        "Code": "FirstselectCostConcept",
        "Type": "Language",
        "English": "First select Cost Concept",
        "German": "Wählen Sie zuerst eine Kostenart aus",
        "Category": "Accounting"
      },
      {
        "Id": 499,
        "Code": "ConceptAlreadySelected",
        "Type": "Language",
        "English": "This Concept is already selected.",
        "German": "Diese Kostenart ist bereits einmal ausgewählt. Bitte fügen Sie eine zusätzliche Beschreibung hinzu oder wählen Sie eine andere Kostenart aus.",
        "Category": "Accounting"
      },
      {
        "Id": 500,
        "Code": "TooltipText1",
        "Type": "Language",
        "English": "The accounting period for the gas invoice must be equal to the accounting period of the building. Otherwise please state the period of the invoice.",
        "German": "Der Abrechnungszeitraum der Gasrechnung muss mit dem Abrechnungszeitraum der Liegenschaft übereinstimmen. Andernfalls geben Sie bitte Abrechnungszeitraum der Gasrechnung an",
        "Category": "Accounting"
      },
      {
        "Id": 501,
        "Code": "TooltipText2",
        "Type": "Language",
        "English": "The calculation of the oil remainder is defined according the FIFO concept (first in/first out)",
        "German": "Die Berechnung des Restölbestandes erfolgt nach dem FIFO-Prinzip (first in/first out)",
        "Category": "Accounting"
      },
      {
        "Id": 502,
        "Code": "TooltipText3",
        "Type": "Language",
        "English": "Please only state the invoice amount, not the discount output.",
        "German": "Bitte geben Sie nur den Rechnungsbetrag an, nicht die Abschlagsleistungen.",
        "Category": "Accounting"
      },
      {
        "Id": 503,
        "Code": "TooltipText4",
        "Type": "Language",
        "English": "Those cost are not possible apportionable. Do you still want to shift them?",
        "German": "Hinweis: Diese Kosten können nicht umgelegt werden. ",
        "Category": "Accounting"
      },
      {
        "Id": 504,
        "Code": "TooltipText5",
        "Type": "Language",
        "English": "Do you want to shift rental for smoke detectors? (Please note: There is no statutory basis)",
        "German": "Wollen Sie die Mietgebühren für die Rauchmelder umlegen (Hinweis: Keine gesetzliche Grundlage",
        "Category": "Accounting"
      },
      {
        "Id": 505,
        "Code": "SuccessfullySaved",
        "Type": "Language",
        "English": "Successfully Saved",
        "German": "Daten erfolgreich gespeichert",
        "Category": "Accounting"
      },
      {
        "Id": 506,
        "Code": "EnterCostData",
        "Type": "Language",
        "English": "Enter Cost Data",
        "German": "Eingabe Kostendaten",
        "Category": "Accounting"
      },
      {
        "Id": 507,
        "Code": "LastSavedOn",
        "Type": "Language",
        "English": "Last Saved On",
        "German": "Zuletzt gespeichert am",
        "Category": "Accounting"
      },
      {
        "Id": 508,
        "Code": "DataExchange",
        "Type": "Language",
        "English": "Data Exchange",
        "German": "Datenträgeraustausch",
        "Category": "Accounting"
      },
      {
        "Id": 509,
        "Code": "EnterUserData",
        "Type": "Language",
        "English": "Enter User Data",
        "German": "Eingabe Nutzerdaten",
        "Category": "Accounting"
      },
      {
        "Id": 510,
        "Code": "AlternativeDateErrorMsg",
        "Type": "Language",
        "English": "Alternative To date must be greater than From date",
        "German": "Das Enddatum muss größer/gleich dem Startdatum sein",
        "Category": "Order"
      },
      {
        "Id": 511,
        "Code": "PrefillDataError",
        "Type": "Language",
        "English": "Order prefill data error",
        "German": "Order prefill data error-german",
        "Category": "Order"
      },
      {
        "Id": 512,
        "Code": "OrderFailMsg",
        "Type": "Language",
        "English": "Could not place order!",
        "German": "Der Auftrag konnte gespeichert werden.",
        "Category": "Order"
      },
      {
        "Id": 513,
        "Code": "SubmitFailMsg",
        "Type": "Language",
        "English": "Request could not be submitted!",
        "German": "Die Anfrage konnte nicht gesendet werden",
        "Category": "Order"
      },
      {
        "Id": 514,
        "Code": "CouldNotCostData",
        "Type": "Language",
        "English": "Could not get cost data!",
        "German": "Kostendaten konnten nicht abgerufen werden",
        "Category": "Miscellaneous"
      },
      {
        "Id": 515,
        "Code": "PlumbingSummaryFlatMsg",
        "Type": "Language",
        "English": "request for the following flat",
        "German": "Anfrage für folgende Nutzeinheit/Wohnung",
        "Category": "Order"
      },
      {
        "Id": 516,
        "Code": "OrderPlumbingFlat",
        "Type": "Language",
        "English": "Order Plumbing (Flat)",
        "German": "Montageauftrag eingeben (Wohnung)",
        "Category": "Order"
      },
      {
        "Id": 517,
        "Code": "OrderPlumbingMeter",
        "Type": "Language",
        "English": "Order Plumbing (Meter)",
        "German": "Montageauftrag eingeben (Messgerät)",
        "Category": "Order"
      },
      {
        "Id": 518,
        "Code": "AccountingConfirmationMessage",
        "Type": "Language",
        "English": "Your accounting has been confirmed.",
        "German": "Ihre Buchhaltung wurde bestätigt.",
        "Category": "Accounting"
      },
      {
        "Id": 519,
        "Code": "AccountingeirReciveMsg",
        "Type": "Language",
        "English": "We have received your accounting and will take care of it immediately.",
        "German": "Wir haben Ihre Buchhaltung erhalten und werden uns umgehend darum kümmern.",
        "Category": "Accounting"
      },
      {
        "Id": 520,
        "Code": "AccountingemailMessage",
        "Type": "Language",
        "English": "You will receive an accounting confirmation by email shortly.",
        "German": "Sie erhalten in Kürze ein Bestätigung.",
        "Category": "Accounting"
      },
      {
        "Id": 521,
        "Code": "LangAdmin",
        "Type": "Language",
        "English": "Admin",
        "German": "Admin",
        "Category": "Admin"
      },
      {
        "Id": 522,
        "Code": "LangAccount",
        "Type": "Language",
        "English": "Account",
        "German": "Account-german",
        "Category": "Admin"
      },
      {
        "Id": 523,
        "Code": "LangInfo",
        "Type": "Language",
        "English": "Info",
        "German": "Info",
        "Category": "Admin"
      },
      {
        "Id": 524,
        "Code": "OrderDrinkingWaterAnalysisConfirmation",
        "Type": "Language",
        "English": "Order Drinking Water Analysis -- Confirmation",
        "German": "Trinkwasseranalyse bestellen - Bestätigung",
        "Category": "Order"
      },
      {
        "Id": 525,
        "Code": "SLDipl",
        "Type": "Language",
        "English": "Computer Scientist",
        "German": "Dipl. Inform. (FH)",
        "Category": "Miscellaneous"
      },
      {
        "Id": 526,
        "Code": "SLIng",
        "Type": "Language",
        "English": "Ing.",
        "German": "Ing.",
        "Category": "Miscellaneous"
      },
      {
        "Id": 527,
        "Code": "SLProfDr",
        "Type": "Language",
        "English": "Prof. Dr.",
        "German": "Prof. Dr.",
        "Category": "Miscellaneous"
      },
      {
        "Id": 528,
        "Code": "SLProf",
        "Type": "Language",
        "English": "Prof.",
        "German": "Prof.",
        "Category": "Miscellaneous"
      },
      {
        "Id": 529,
        "Code": "SLDr",
        "Type": "Language",
        "English": "Dr.",
        "German": "Dr.",
        "Category": "Miscellaneous"
      },
      {
        "Id": 530,
        "Code": "SLDipIngFH",
        "Type": "Language",
        "English": "Dipl. Ing. (FH)",
        "German": "Dipl. Ing. (FH)",
        "Category": "Miscellaneous"
      },
      {
        "Id": 531,
        "Code": "SLDipIng",
        "Type": "Language",
        "English": "Dipl. Ing.",
        "German": "Dipl. Ing.",
        "Category": "Miscellaneous"
      },
      {
        "Id": 532,
        "Code": "SLAll",
        "Type": "Language",
        "English": "Mrs./Mr./Firm",
        "German": "Frau/Herr/Firma",
        "Category": "Miscellaneous"
      },
      {
        "Id": 533,
        "Code": "SLEhe",
        "Type": "Language",
        "English": "Married Couple",
        "German": "Eheleute",
        "Category": "Miscellaneous"
      },
      {
        "Id": 534,
        "Code": "SLFamilie",
        "Type": "Language",
        "English": "Family",
        "German": "Familie",
        "Category": "Miscellaneous"
      },
      {
        "Id": 535,
        "Code": "SLMr",
        "Type": "Language",
        "English": "Mr.",
        "German": "Herr",
        "Category": "Miscellaneous"
      },
      {
        "Id": 536,
        "Code": "SLMrs",
        "Type": "Language",
        "English": "Mrs.",
        "German": "Frau",
        "Category": "Miscellaneous"
      },
      {
        "Id": 537,
        "Code": "SLCmpny",
        "Type": "Language",
        "English": "Firm",
        "German": "Firma",
        "Category": "Miscellaneous"
      },
      {
        "Id": 538,
        "Code": "Not_started",
        "Type": "Language",
        "English": "NOT_STARTED",
        "German": "Nicht begonnen",
        "Category": "Lookup"
      },
      {
        "Id": 539,
        "Code": "On_hold",
        "Type": "Language",
        "English": "ON_HOLD",
        "German": "Wartend",
        "Category": "Lookup"
      },
      {
        "Id": 540,
        "Code": "Null",
        "Type": "Language",
        "English": "",
        "German": "",
        "Category": "Lookup"
      },
      {
        "Id": 541,
        "Code": "OrderReadingConfirmation",
        "Type": "Language",
        "English": "Order Reading -- Confirmation",
        "German": "Auftragslesung - Bestätigung",
        "Category": "Order"
      },
      {
        "Id": 542,
        "Code": "Hello",
        "Type": "Language",
        "English": "Hello",
        "German": "Hallo",
        "Category": "Order"
      },
      {
        "Id": 543,
        "Code": "EndPeriod",
        "Type": "Language",
        "English": "Annual reading",
        "German": "Jahresablesung",
        "Category": "Lookup"
      },
      {
        "Id": 544,
        "Code": "EndPeriod2At",
        "Type": "Language",
        "English": "Annual reading after date",
        "German": "Jahresablesung Nachtermin",
        "Category": "Lookup"
      },
      {
        "Id": 545,
        "Code": "EndPeriod3At",
        "Type": "Language",
        "English": "Payable late appointment",
        "German": "Kostenpflichtiger Nachtermin",
        "Category": "Lookup"
      },
      {
        "Id": 546,
        "Code": "ChangeRent",
        "Type": "Language",
        "English": "Intermediate reading",
        "German": "Zwischenablesung",
        "Category": "Lookup"
      },
      {
        "Id": 547,
        "Code": "Punctual",
        "Type": "Language",
        "English": "Special reading",
        "German": "Sonderablesung",
        "Category": "Lookup"
      },
      {
        "Id": 548,
        "Code": "PlannedOn",
        "Type": "Language",
        "English": "Planned On",
        "German": "geplant am",
        "Category": "StockOverview"
      },
      {
        "Id": 549,
        "Code": "DiscardQuestion",
        "Type": "Language",
        "English": "You have unsaved changes, do you want to Discard?",
        "German": "Sie haben nicht gespeicherte Änderungen, möchten Sie verwerfen?",
        "Category": "Miscellaneous"
      },
      {
        "Id": 550,
        "Code": "DiscardChanges",
        "Type": "Language",
        "English": "Discard Changes?",
        "German": "Änderungen speichern?",
        "Category": "Miscellaneous"
      },
      {
        "Id": 551,
        "Code": "Discard",
        "Type": "Language",
        "English": "Discard",
        "German": "Nicht speichern",
        "Category": "Miscellaneous"
      },
      {
        "Id": 552,
        "Code": "LngSearchPlaceholder",
        "Type": "Language",
        "English": "Search (Code, Category, English, German)",
        "German": "Suche (Code, Kategorie, Englisch, Deutsch)",
        "Category": "Admin"
      },
      {
        "Id": 553,
        "Code": "DefaultSearchPlaceholder",
        "Type": "Language",
        "English": "Search (Admin User No., Location, etc)",
        "German": "Suche (Admin-Benutzernummer, Standort usw.)",
        "Category": "StockOverview"
      },
      {
        "Id": 554,
        "Code": "PropertySearchPlaceholder",
        "Type": "Language",
        "English": "Search (Admin Lg No., Teha Lg No, etc)",
        "German": "Suche (Admin LG Nr., Teha LG Nr. usw.)",
        "Category": "StockOverview"
      },
      {
        "Id": 555,
        "Code": "Building1",
        "Type": "Language",
        "English": "Detached Family House",
        "German": "Freistehendes Einfamilienhaus",
        "Category": "Order"
      },
      {
        "Id": 556,
        "Code": "Building2",
        "Type": "Language",
        "English": "Single-family Detached House",
        "German": "Einseitig angebautes Einfamilienhaus",
        "Category": "Order"
      },
      {
        "Id": 557,
        "Code": "Building3",
        "Type": "Language",
        "English": "Two-sided Detached House",
        "German": "Zweiseitig angebautes Einfamilienhaus",
        "Category": "Order"
      },
      {
        "Id": 558,
        "Code": "Building4",
        "Type": "Language",
        "English": "Detached Two-family House",
        "German": "Freistehendes Zweifamilienhaus",
        "Category": "Order"
      },
      {
        "Id": 559,
        "Code": "Building5",
        "Type": "Language",
        "English": "Two-family House Built on One Side",
        "German": "Einseitig angebautes Zweifamilienhaus",
        "Category": "Order"
      },
      {
        "Id": 560,
        "Code": "Building6",
        "Type": "Language",
        "English": "Two-family House Built on Two Side",
        "German": "Zweiseitig angebautes Zweifamilienhaus",
        "Category": "Order"
      },
      {
        "Id": 561,
        "Code": "Building7",
        "Type": "Language",
        "English": "Apartment Building",
        "German": "Mehrfamilienhaus",
        "Category": "Order"
      },
      {
        "Id": 562,
        "Code": "Building8",
        "Type": "Language",
        "English": "Part of a mixed-use Building",
        "German": "Wohnteil gemischt genutztes Gebäude",
        "Category": "Order"
      },
      {
        "Id": 563,
        "Code": "Delete",
        "Type": "Language",
        "English": "Delete",
        "German": "Löschen",
        "Category": "Miscellaneous"
      },
      {
        "Id": 564,
        "Code": "PleaseEnterText",
        "Type": "Language",
        "English": "Please enter text",
        "German": "Bitte geben Sie Text ein",
        "Category": "Order"
      },
      {
        "Id": 565,
        "Code": "OrdersSearchPlacholder",
        "Type": "Language",
        "English": "Search (Teha LG No., Admin LG No., TEHA User & Admin User)",
        "German": "Suche (Teha LG Nr., Admin LG Nr., TEHA User & Admin User)",
        "Category": "Order"
      },
      {
        "Id": 566,
        "Code": "OnHoldTooltip",
        "Type": "Language",
        "English": "The order is currently blocked due to missing feedback to open letters",
        "German": "Auftrag derzeit “blockiert” aufgrund unbeantworteter Schreiben.",
        "Category": "StockOverview"
      },
      {
        "Id": 567,
        "Code": "AccountingStatusHome",
        "Type": "Language",
        "English": "Accounting status",
        "German": "Abrechnungsstatus",
        "Category": "Home"
      },
      {
        "Id": 568,
        "Code": "ReadingStatusHome",
        "Type": "Language",
        "English": "Reading status",
        "German": "Ablesestatus",
        "Category": "Home"
      },
      {
        "Id": 569,
        "Code": "AccountingStatusAccounting",
        "Type": "Language",
        "English": "Accounting status",
        "German": "Abrechnungsstatus",
        "Category": "Accounting"
      },
      {
        "Id": 570,
        "Code": "AccountingPeriodAccounting",
        "Type": "Language",
        "English": "Accounting Period",
        "German": "Abrechnungszeitraum",
        "Category": "Accounting"
      },
      {
        "Id": 571,
        "Code": "AccountingPeriodDoc",
        "Type": "Language",
        "English": "Accounting Period",
        "German": "Abrechnungszeitraum",
        "Category": "DocumentArchives"
      },
      {
        "Id": 572,
        "Code": "InterimReadingAccounting",
        "Type": "Language",
        "English": "Interim Reading",
        "German": "Zwischenablesung",
        "Category": "Accounting"
      },
      {
        "Id": 573,
        "Code": "Dta",
        "Type": "Language",
        "English": "DTA",
        "German": "Datenträgeraustausch",
        "Category": "Accounting"
      },
      {
        "Id": 574,
        "Code": "AddCostConcept",
        "Type": "Language",
        "English": "Add cost concept",
        "German": "Kostenart hinzufügen",
        "Category": "Accounting"
      },
      {
        "Id": 575,
        "Code": "AccountingperiodUserLevel",
        "Type": "Language",
        "English": "Accounting period",
        "German": "Abrechnungszeitraum",
        "Category": "StockOverview"
      },
      {
        "Id": 576,
        "Code": "ReadingStatusUserLevel",
        "Type": "Language",
        "English": "Reading status",
        "German": "Ablesestatus",
        "Category": "StockOverview"
      },
      {
        "Id": 577,
        "Code": "PlumbingstatusMeterLevel",
        "Type": "Language",
        "English": "Plumbing status",
        "German": "Montagestatus",
        "Category": "StockOverview"
      },
      {
        "Id": 578,
        "Code": "PlumbingStatusUserLevel",
        "Type": "Language",
        "English": "Plumbing status",
        "German": "Montagestatus",
        "Category": "StockOverview"
      },
      {
        "Id": 579,
        "Code": "RentNo",
        "Type": "Language",
        "English": "Rent No.",
        "German": "Wohnungs-Nr. ",
        "Category": "Accounting"
      },
      {
        "Id": 580,
        "Code": "WelcomeAccounting",
        "Type": "Language",
        "English": "Welcome to Accounting Overview!",
        "German": "Hier sehen Sie den Abrechnungsstatus Ihrer Liegenschaften. Auf den Folgeseiten können Sie die Kosten- und Nutzerdaten eingeben oder per Datenträgeraustauschverfahren an uns übermitteln.",
        "Category": "Accounting"
      },
      {
        "Id": 581,
        "Code": "AttachmentTooltip",
        "Type": "Language",
        "English": "Images, pdf, excel, and word files are allowed only and File size must be under 5MB!",
        "German": "Es sind nur Dateien in Bildformaten sowie PDF-, Excel- und Word-Dokumente erlaubt. Die maximale Gesamtgröße darf nicht größer als 5 MB betragen. ",
        "Category": "Accounting"
      },
      {
        "Id": 582,
        "Code": "AddInvoiceTooltip",
        "Type": "Language",
        "English": "Add another invoice",
        "German": "Weitere Rechnung hinzufügen",
        "Category": "Accounting"
      },
      {
        "Id": 583,
        "Code": "ClearTooltip",
        "Type": "Language",
        "English": "Clear",
        "German": "Löschen",
        "Category": "Accounting"
      },
      {
        "Id": 584,
        "Code": "GrossAmount",
        "Type": "Language",
        "English": "Gross Amount",
        "German": "Bruttobetrag",
        "Category": "Accounting"
      },
      {
        "Id": 585,
        "Code": "WageShareType",
        "Type": "Language",
        "English": "Wage Share Type",
        "German": "Typ Lohnanteil",
        "Category": "Accounting"
      },
      {
        "Id": 586,
        "Code": "EnergyWarningConsunption",
        "Type": "Language",
        "English": "Please cross check consumption",
        "German": "Der Verbrauch weicht +/- 20% vom letztjährigen Verbauch ab.",
        "Category": "Accounting"
      },
      {
        "Id": 587,
        "Code": "EnergyWarningDate",
        "Type": "Language",
        "English": "Please cross check Invoice Date",
        "German": "Bitte überprüfen Sie das Rechnungsdatum",
        "Category": "Accounting"
      },
      {
        "Id": 588,
        "Code": "MeterDefect",
        "Type": "Language",
        "English": "Meter Defect",
        "German": "Zähler defekt",
        "Category": "Lookup"
      },
      {
        "Id": 589,
        "Code": "NewRadiator",
        "Type": "Language",
        "English": "New Radiator",
        "German": "Zusätzlicher Heizkörper",
        "Category": "Lookup"
      },
      {
        "Id": 590,
        "Code": "CheckMeter",
        "Type": "Language",
        "English": "Check Meter",
        "German": "Zähler überprüfen",
        "Category": "Lookup"
      },
      {
        "Id": 591,
        "Code": "MeterMissing",
        "Type": "Language",
        "English": "Meter Missing",
        "German": "Zähler fehlt",
        "Category": "Lookup"
      },
      {
        "Id": 592,
        "Code": "RemoveMeter",
        "Type": "Language",
        "English": "Remove Meter",
        "German": "Zähler deinstallieren",
        "Category": "Lookup"
      },
      {
        "Id": 593,
        "Code": "ReplaceRadiator",
        "Type": "Language",
        "English": "ReplaceRadiator",
        "German": "Heizkörperwechsel",
        "Category": "Lookup"
      },
      {
        "Id": 594,
        "Code": "AddNewUserTooltip",
        "Type": "Language",
        "English": "Add New User",
        "German": "Nutzerwechsel eingeben",
        "Category": "Accounting"
      },
      {
        "Id": 595,
        "Code": "Activated",
        "Type": "Language",
        "English": "Activated",
        "German": "Aktiviert",
        "Category": "StockOverview"
      },
      {
        "Id": 596,
        "Code": "NotActivated",
        "Type": "Language",
        "English": "Not Activated",
        "German": "Nicht aktiviert",
        "Category": "StockOverview"
      },
      {
        "Id": 597,
        "Code": "AccountingEnterCostData",
        "Type": "Language",
        "English": "Accounting - Enter Cost Data",
        "German": "Eingabe Kostendaten",
        "Category": "Accounting"
      },
      {
        "Id": 598,
        "Code": "AccountingEnterSummaryRelease",
        "Type": "Language",
        "English": "Accounting - Enter Summary & Release",
        "German": "Überprüfung Dateneingabe",
        "Category": "Accounting"
      },
      {
        "Id": 599,
        "Code": "AccountingPeriodAccountingSelector",
        "Type": "Language",
        "English": "Accounting Period",
        "German": "Abrechnungsjahr",
        "Category": "Accounting"
      },
      {
        "Id": 600,
        "Code": "UserEdited",
        "Type": "Language",
        "English": "You have edited the user name",
        "German": "Sie ändern den Nutzernamen. Dies ist kein Nutzerwechsel. ",
        "Category": "Accounting"
      },
      {
        "Id": 601,
        "Code": "AverageTemperature",
        "Type": "Language",
        "English": "Hot Water Average Temperature",
        "German": "Heißwasser Durchschnittstemperatur",
        "Category": "Order"
      },
      {
        "Id": 602,
        "Code": "InsulationCeilingYear",
        "Type": "Language",
        "English": "Insulation Ceiling Year",
        "German": "Isolationsdeckenjahr",
        "Category": "Order"
      },
      {
        "Id": 603,
        "Code": "RenovationWindowsYear",
        "Type": "Language",
        "English": "Renovation Windows Year",
        "German": "Renovierungsfenster Jahr",
        "Category": "Order"
      },
      {
        "Id": 604,
        "Code": "UserValidationMsg",
        "Type": "Language",
        "English": "User moving in date must be greater or equal to user moving out.",
        "German": "Das Einzugsdatum des Benutzers muss größer oder gleich dem Auszugsdatum des Benutzers sein.",
        "Category": "Order"
      },
      {
        "Id": 605,
        "Code": "DtaDeactive",
        "Type": "Language",
        "English": "If you would like to enter the cost data and / or the user data via the web portal, please contact us at 06252-9380033 or at abrechnung@teha-wd.de",
        "German": "Falls Sie das Datenträgeraustauschverfahren aktivieren möchten, kontaktieren Sie uns unter Tel: 06252 - 93800 -33 oder E-Mail: abrechnung@teha-wd.de. ",
        "Category": "Accounting"
      },
      {
        "Id": 606,
        "Code": "DtaActive",
        "Type": "Language",
        "English": "If you would like to enter the cost data and / or the user data via the web portal, please contact us at 06252-9380033 or at abrechnung@teha-wd.de.",
        "German": "Wenn Sie die Kostendaten und/oder die Nutzerdaten über das Webportal eingeben möchten, dann kontaktieren Sie uns unter 06252-9380033 oder unter abrechnung@teha-wd.de. ",
        "Category": "Accounting"
      },
      {
        "Id": 607,
        "Code": "YourTextForBilling",
        "Type": "Language",
        "English": "Your text for billing",
        "German": "Ihr Text für die Abrechnung",
        "Category": "Accounting"
      },
      {
        "Id": 608,
        "Code": "InternalTehaInvoice",
        "Type": "Language",
        "English": "Internal TEHA invoice.Not editable.",
        "German": "Interne TEHA-Rechnung. Nicht editierbar.",
        "Category": "Accounting"
      },
      {
        "Id": 609,
        "Code": "YourComment",
        "Type": "Language",
        "English": "Your Comment",
        "German": "Ihr Kommentar",
        "Category": "Accounting"
      },
      {
        "Id": 610,
        "Code": "PersonalData",
        "Type": "Language",
        "English": "Personal Data",
        "German": "Kontaktdaten",
        "Category": "Account"
      },
      {
        "Id": 611,
        "Code": "NoOptionSelected",
        "Type": "Language",
        "English": "NoOptionSelected",
        "German": "Keine Benachrichtigung",
        "Category": "Account"
      },
      {
        "Id": 612,
        "Code": "BuildingImage",
        "Type": "Language",
        "English": "Building Images",
        "German": "Bilder erstellen",
        "Category": "Order"
      },
      {
        "Id": 613,
        "Code": "AirCondition",
        "Type": "Language",
        "English": "Air Condition",
        "German": "Klimaanlage",
        "Category": "Order"
      },
      {
        "Id": 614,
        "Code": "IsAirConditionAvailable",
        "Type": "Language",
        "English": "Is there an air conditioner available?",
        "German": "Gibt es eine Klimaanlage?",
        "Category": "Order"
      },
      {
        "Id": 615,
        "Code": "NextServiceDate",
        "Type": "Language",
        "English": "Next Service Date",
        "German": "Nächstes Servicedatum",
        "Category": "Order"
      },
      {
        "Id": 616,
        "Code": "F",
        "Type": "Language",
        "English": "After second reading",
        "German": "Nach dem 1. Ablestermin",
        "Category": "Account"
      },
      {
        "Id": 617,
        "Code": "S",
        "Type": "Language",
        "English": "After second reading attempt",
        "German": "Nach dem 2. Ablesetermin",
        "Category": "Account"
      },
      {
        "Id": 618,
        "Code": "InvoiceOverviewAllBuildings",
        "Type": "Language",
        "English": "Invoice Overview - All Buildings",
        "German": "Übersicht offene Rechnungen",
        "Category": "DocumentArchives"
      },
      {
        "Id": 619,
        "Code": "SeeAllInvoices",
        "Type": "Language",
        "English": "Click here to see Invoices of all buildings",
        "German": "Klicken Sie hier, um Rechnungen aller Gebäude anzuzeigen",
        "Category": "DocumentArchives"
      },
      {
        "Id": 620,
        "Code": "ImagesMissingMsg",
        "Type": "Language",
        "English": "Please select 3 images of the building",
        "German": "Bitte wählen Sie 3 Bilder des Gebäudes",
        "Category": "Order"
      },
      {
        "Id": 621,
        "Code": "ChooseImage",
        "Type": "Language",
        "English": "Please upload building image!",
        "German": "Bitte laden Sie das Gebäudebild hoch!",
        "Category": "Order"
      },
      {
        "Id": 622,
        "Code": "Von",
        "Type": "Language",
        "English": "of",
        "German": "von",
        "Category": "Accounting"
      },
      {
        "Id": 623,
        "Code": "FileSizeMsg",
        "Type": "Language",
        "English": "File size must under 5MB!",
        "German": "Dateigröße muss unter 5MB liegen!",
        "Category": "Accounting"
      },
      {
        "Id": 624,
        "Code": "InvalidFormat",
        "Type": "Language",
        "English": "Invalid format",
        "German": "Ungültiges Format",
        "Category": "Accounting"
      },
      {
        "Id": 625,
        "Code": "CanEnterData",
        "Type": "Language",
        "English": "You can enter Data",
        "German": "Dateneingabe möglich",
        "Category": "Accounting"
      },
      {
        "Id": 626,
        "Code": "OrderDrinkingWater",
        "Type": "Language",
        "English": "Order Drinking Water Analysis",
        "German": "Trinkwasseranalyse bestellen",
        "Category": "Accounting"
      },
      {
        "Id": 627,
        "Code": "Service",
        "Type": "Language",
        "English": "Service",
        "German": "Dienstleistung",
        "Category": "Order"
      },
      {
        "Id": 628,
        "Code": "AttachImage",
        "Type": "Language",
        "English": "Upload Image",
        "German": "Bild hochladen",
        "Category": "Order"
      },
      {
        "Id": 629,
        "Code": "AccountingInProgress",
        "Type": "Language",
        "English": "The accounting is in progress",
        "German": "Keine Dateneingabe mehr möglich",
        "Category": "Accounting"
      },
      {
        "Id": 630,
        "Code": "AccountingNotStarted",
        "Type": "Language",
        "English": "The Accounting is not started",
        "German": "Das Rechnungswesen wird nicht gestartet",
        "Category": "Accounting"
      },
      {
        "Id": 631,
        "Code": "Test_rw",
        "Type": "Language",
        "English": "TEST_RW",
        "German": "Sicht & Funktionsprüfung",
        "Category": "Order"
      },
      {
        "Id": 632,
        "Code": "Test_water",
        "Type": "Language",
        "English": "TEST_WATER",
        "German": "Trinkwasser",
        "Category": "Order"
      },
      {
        "Id": 633,
        "Code": "AccountingBeenProcessed",
        "Type": "Language",
        "English": "The accounting has been processed",
        "German": "Keine Dateneingabe mehr möglich",
        "Category": "Accounting"
      },
      {
        "Id": 634,
        "Code": "AccountingAdminUserNo",
        "Type": "Language",
        "English": "Admin User No.",
        "German": "Admin Nutzer Nr.",
        "Category": "Accounting"
      },
      {
        "Id": 635,
        "Code": "MiscellaneousLabel",
        "Type": "Language",
        "English": "Miscellaneous",
        "German": "Sonstiges",
        "Category": "Miscellaneous"
      },
      {
        "Id": 636,
        "Code": "LookupLabel",
        "Type": "Language",
        "English": "Lookup",
        "German": "Nachschlagen",
        "Category": "Miscellaneous"
      },
      {
        "Id": 637,
        "Code": "AccountingTehaUserNo",
        "Type": "Language",
        "English": "TEHA User No.",
        "German": "Wohnung",
        "Category": "Accounting"
      },
      {
        "Id": 638,
        "Code": "Dated",
        "Type": "Language",
        "English": "Dated",
        "German": "Datum ",
        "Category": "Home"
      },
      {
        "Id": 639,
        "Code": "ReferenceLink",
        "Type": "Language",
        "English": "Reference Link",
        "German": "Referenzlink",
        "Category": "Home"
      },
      {
        "Id": 640,
        "Code": "News",
        "Type": "Language",
        "English": "News",
        "German": "Infos",
        "Category": "Home"
      },
      {
        "Id": 641,
        "Code": "MyOffers",
        "Type": "Language",
        "English": "My Offers",
        "German": "Angebote",
        "Category": "Order"
      },
      {
        "Id": 642,
        "Code": "AccountingSaveErrorMessage",
        "Type": "Language",
        "English": "There is an error in save, Please contact with administrator.",
        "German": "Beim Speichern ist ein Fehler aufgetreten. Bitte wenden Sie sich an den Administrator.",
        "Category": "Accounting"
      },
      {
        "Id": 643,
        "Code": "AdditionalArea",
        "Type": "Language",
        "English": "Additional Area",
        "German": "Umlageschlüssel m² Nebenkosten",
        "Category": "Accounting"
      },
      {
        "Id": 644,
        "Code": "ErrorExists",
        "Type": "Language",
        "English": "There is an validation issues, please fill all mandatory fields",
        "German": "Bitte füllen Sie alle Pflichtfelder aus",
        "Category": "Accounting"
      },
      {
        "Id": 645,
        "Code": "ConsumptionAnalysis",
        "Type": "Language",
        "English": "CONSUMPTION ANALYSIS",
        "German": "Verbrauchsanalyse nach § 7 Abs. 2 Heizkostenverordnung ",
        "Category": "Accounting"
      },
      {
        "Id": 646,
        "Code": "SelectOption",
        "Type": "Language",
        "English": "   --Select--   ",
        "German": " - Auswahl - ",
        "Category": "Accounting"
      },
      {
        "Id": 647,
        "Code": "Heading",
        "Type": "Language",
        "English": "Heading",
        "German": "Überschrift",
        "Category": "Info"
      },
      {
        "Id": 648,
        "Code": "TermsConditionsTab",
        "Type": "Language",
        "English": "Terms & Conditions",
        "German": "Terms & Bedingungen",
        "Category": "Info"
      },
      {
        "Id": 649,
        "Code": "LegalTextTab",
        "Type": "Language",
        "English": "Legal Text",
        "German": "Rechtstext",
        "Category": "Info"
      },
      {
        "Id": 650,
        "Code": "FAQTab",
        "Type": "Language",
        "English": "FAQs",
        "German": "Häufig gestellte Fragen",
        "Category": "Info"
      },
      {
        "Id": 651,
        "Code": "DocumentName",
        "Type": "Language",
        "English": "Document Name",
        "German": "Dokumentname",
        "Category": "Info"
      },
      {
        "Id": 652,
        "Code": "TermsReadMsg",
        "Type": "Language",
        "English": "Please read the following documents that list out Terms and Conditions",
        "German": "Bitte lesen Sie die folgenden Dokumente, in denen die Allgemeinen Geschäftsbedingungen aufgeführt sind",
        "Category": "Info"
      },
      {
        "Id": 653,
        "Code": "Pages",
        "Type": "Language",
        "English": "Pages",
        "German": "Seiten",
        "Category": "Info"
      },
      {
        "Id": 654,
        "Code": "PersonalDataPages",
        "Type": "Language",
        "English": "Personal data",
        "German": "persönliche Daten",
        "Category": "Info"
      },
      {
        "Id": 655,
        "Code": "ConceptDeletedSuccessfully",
        "Type": "Language",
        "English": "Concept Deleted Successfully",
        "German": "Konzept erfolgreich gelöscht",
        "Category": "Accounting"
      },
      {
        "Id": 656,
        "Code": "OnwerDeletedSuccessfully",
        "Type": "Language",
        "English": "Onwer Deleted Successfully",
        "German": "Onwer erfolgreich gelöscht",
        "Category": "Accounting"
      },
      {
        "Id": 657,
        "Code": "RentDeletedSuccessfully",
        "Type": "Language",
        "English": "Rental Deleted Successfully",
        "German": "Vermietung erfolgreich gelöscht",
        "Category": "Accounting"
      },
      {
        "Id": 658,
        "Code": "EnergyCostMandatoryError",
        "Type": "Language",
        "English": "Energy Cost must be filled. It is required for submision",
        "German": "Sie haben noch keine Energiekosten eingegeben. Bitte tragen Sie diese ein.",
        "Category": "Accounting"
      },
      {
        "Id": 659,
        "Code": "BillingInformation",
        "Type": "Language",
        "English": "Billing Information",
        "German": "Abrechnungsrelevante Informationen",
        "Category": "accounting"
      },
      {
        "Id": 660,
        "Code": "PCYEOPMR",
        "Type": "Language",
        "English": "The value is smaller than the last read value. Please check your entry or add a picture of the meter reading.",
        "German": "Der Wert ist kleiner ist der zuletzt abgelesene Wert. Bitte überprüfen Sie Ihre Eingabe oder fügen Sie ein Bild des Zählerstandes zu.",
        "Category": "Order"
      },
      {
        "Id": 661,
        "Code": "AllMoveOutReadingsTooltip",
        "Type": "Language",
        "English": "The data has already entered for this period.",
        "German": "Die Daten sind für diesen Zeitraum bereits erfasst.",
        "Category": "Order"
      },
      {
        "Id": 662,
        "Code": "PersonalDataTabMsg",
        "Type": "Language",
        "English": "Here you can view and change your personal data.",
        "German": "hier können Sie Ihre persönlichen Daten einsehen und abändern.",
        "Category": "Account"
      },
      {
        "Id": 663,
        "Code": "NotificationsTabMsg",
        "Type": "Language",
        "English": "You decide when and how you want to be informed about new bills or invoices, assemblies and readings.",
        "German": "bestimmen Sie selbst, wann und wie Sie über neue Abrechnungen oder Rechnungen, Montagen und Ablesungen informiert werden wollen.",
        "Category": "Account"
      },
      {
        "Id": 664,
        "Code": "PasswordTabMsg",
        "Type": "Language",
        "English": "Change your current password here.",
        "German": "ändern Sie hier Ihr aktuelles Passwort.",
        "Category": "Account"
      },
      {
        "Id": 665,
        "Code": "ContractsTabMsg",
        "Type": "Language",
        "English": "Download your contracts in PDF format here and see more detailed information.",
        "German": "laden Sie sich hier Ihre Verträge in PDF-Format herunter und sehen Sie weitere Detailinformationen ein.",
        "Category": "Account"
      },
      {
        "Id": 666,
        "Code": "TeamsTabMsg",
        "Type": "Language",
        "English": "Assign your managers to existing properties or expand your team here.",
        "German": "weisen Sie Ihre Verwalter bestehenden Liegenschaften zu oder erweitern Sie hier Ihr Team. ",
        "Category": "Account"
      },
      {
        "Id": 667,
        "Code": "ReadingPlannedOn",
        "Type": "Language",
        "English": "Planned On",
        "German": "geplant am",
        "Category": "StockOverview"
      },
      {
        "Id": 668,
        "Code": "MyOffersTabMsg",
        "Type": "Language",
        "English": "Here you can see your offers and download the document.",
        "German": "Hier können Sie Ihre Angebote einsehen und das Dokument herunterladen.",
        "Category": "Account"
      },
      {
        "Id": 669,
        "Code": "MyPreferencesTabMsg",
        "Type": "Language",
        "English": "Here you can change language and page size of the application.",
        "German": "Hier können Sie Sprache und Seitengröße der Anwendung ändern. Angebote und laden Sie das Dokument herunter.",
        "Category": "Account"
      },
      {
        "Id": 670,
        "Code": "MyProfileEmailTooltip",
        "Type": "Language",
        "English": "All invoices will be sent to the selected emails",
        "German": "Alle Rechnungen werden an die ausgewählten E-Mails gesendet",
        "Category": "Account"
      },
      {
        "Id": 671,
        "Code": "HelloCardWelcomeForMyOrder",
        "Type": "Language",
        "English": "How can we help you today?",
        "German": "Wir können wir Dir heute helfen? bezüglich Bestellungen",
        "Category": "Miscellaneous"
      },
      {
        "Id": 672,
        "Code": "AddNewOnwerTooltip",
        "Type": "Language",
        "English": "Add New owner",
        "German": "Neuen Besitzer hinzufügen",
        "Category": "Accounting "
      }
    ]
  },
  "SystemSetting": {
    "type": "SystemSetting",
    "items": [
      {
        "Id": 1,
        "Code": "From",
        "Type": "SystemSetting",
        "SettingCategory": "Site",
        "DisplayName": "Site url",
        "Value": "https:localhost:42000/home11",
        "Description": "someDescription",
        "RegExp": "someRegExpress"
      },
      {
        "Id": 2,
        "Code": "SmtpUsername",
        "Type": "SystemSetting",
        "SettingCategory": "Site",
        "DisplayName": "Site url",
        "Value": "https:localhost:42000/home",
        "Description": "someDescription",
        "RegExp": "someRegExpress"
      },
      {
        "Id": 3,
        "Code": "SmtpPassword",
        "Type": "SystemSetting",
        "SettingCategory": "Site",
        "DisplayName": "Site url",
        "Value": "https:localhost:42000/home",
        "Description": "someDescription",
        "RegExp": "someRegExpress"
      },
      {
        "Id": 4,
        "Code": "SmtpPort",
        "Type": "SystemSetting",
        "SettingCategory": "Site",
        "DisplayName": "Site url",
        "Value": "9000",
        "Description": "someDescription",
        "RegExp": "someRegExpress"
      },
      {
        "Id": 5,
        "Code": "SmtpServer",
        "Type": "SystemSetting",
        "SettingCategory": "Site",
        "DisplayName": "Site url",
        "Value": "https:localhost:42000/home",
        "Description": "someDescription",
        "RegExp": "someRegExpress"
      },
      {
        "Id": 6,
        "Code": "GridPageSize",
        "Type": "SystemSetting",
        "SettingCategory": "Site",
        "DisplayName": "Site url",
        "Value": "10",
        "Description": "someDescription",
        "RegExp": "someRegExpress"
      },
      {
        "Id": 7,
        "Code": "MaxRecord",
        "Type": "SystemSetting",
        "SettingCategory": "Site",
        "DisplayName": "Site url",
        "Value": "500",
        "Description": "someDescription",
        "RegExp": "someRegExpress"
      },
      {
        "Id": 8,
        "Code": "Api",
        "Type": "SystemSetting",
        "SettingCategory": "Site",
        "DisplayName": "Site url",
        "Value": "https:localhost:42000/home",
        "Description": "someDescription",
        "RegExp": "someRegExpress"
      },
      {
        "Id": 9,
        "Code": "TehaApi",
        "Type": "SystemSetting",
        "SettingCategory": "Site",
        "DisplayName": "Site url",
        "Value": "https:localhost:9000/",
        "Description": "someDescription",
        "RegExp": "someRegExpress"
      },
      {
        "Id": 10,
        "Code": "Web",
        "Type": "SystemSetting",
        "SettingCategory": "Site",
        "DisplayName": "Site url",
        "Value": "https:localhost:500/dashboard",
        "Description": "someDescription",
        "RegExp": "someRegExpress"
      },
      {
        "Id": 11,
        "Code": "JavascriptErrors",
        "Type": "SystemSetting",
        "SettingCategory": "Site",
        "DisplayName": "Site url",
        "Value": "true",
        "Description": "someDescription",
        "RegExp": "someRegExpress"
      },
      {
        "Id": 12,
        "Code": "ExceptionEmails",
        "Type": "SystemSetting",
        "SettingCategory": "Site",
        "DisplayName": "Site url",
        "Value": "true",
        "Description": "someDescription",
        "RegExp": "someRegExpress"
      },
      {
        "Id": 13,
        "Code": "DataExchangeUrl",
        "Type": "SystemSetting",
        "SettingCategory": "Site",
        "DisplayName": "Data exchange url",
        "Value": "http://onlineservices.teha-wd.de:652/ishaca/loginDataExchange.do",
        "Description": "someDescription",
        "RegExp": "someRegExpress"
      }
    ]
  },
  "SystemLog": {
    "type": "SystemLog",
    "items": [
      {
        "Id": 0,
        "Type": "HttpRequestException",
        "Message": "No such host is known.",
        "LogDate": "25/06/2021 3:32:58 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: No such host is known.\r\n ---> System.Net.Sockets.SocketException (11001): No such host is known.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Post(String url, Object body, String token) in D:\\BitLogix\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 92\r\n   at TEHA.Portal.ProxyAPI.Clients.Accounting.AccountingClient.GetAccountingPeriods(String token, AccountingRequest accountingRequest) in D:\\BitLogix\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Accounting\\AccountingClient.cs:line 198\r\n   at TEHA.Portal.API.Controllers.AccountingController.GetAccountingPeriods(AccountingRequest accountingRequest) in D:\\BitLogix\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountingController.cs:line 53\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in D:\\BitLogix\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 49\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /API/Accounting/GetAccountingPeriods, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 1,
        "Type": "JsonReaderException",
        "Message": "Could not convert string to DateTime: 2021-06-31. Path 'data.items[23].readings[1].effectiveDate', line 1, position 32066.",
        "LogDate": "6/26/2021 7:05:27 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonReaderException: Could not convert string to DateTime: 2021-06-31. Path 'data.items[23].readings[1].effectiveDate', line 1, position 32066.\r\n   at Newtonsoft.Json.JsonReader.ReadDateTimeString(String s)\r\n   at Newtonsoft.Json.JsonTextReader.FinishReadQuotedStringValue(ReadType readType)\r\n   at Newtonsoft.Json.JsonTextReader.ReadStringValue(ReadType readType)\r\n   at Newtonsoft.Json.JsonTextReader.ReadAsDateTime()\r\n   at Newtonsoft.Json.JsonReader.ReadForType(JsonContract contract, Boolean hasConverter)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetProperties(PropertyRequest propertyRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 84\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetProperties, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 2,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 345.",
        "LogDate": "6/26/2021 7:37:14 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 345.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 3,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 345.",
        "LogDate": "6/26/2021 7:37:15 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 345.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 4,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 364.",
        "LogDate": "6/27/2021 11:14:27 AM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 364.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 5,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 364.",
        "LogDate": "6/27/2021 11:14:36 AM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 364.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 6,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 364.",
        "LogDate": "6/27/2021 11:14:41 AM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 364.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 7,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 364.",
        "LogDate": "6/27/2021 11:14:49 AM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 364.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 8,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 364.",
        "LogDate": "6/27/2021 11:14:55 AM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 364.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 9,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 364.",
        "LogDate": "6/27/2021 12:38:07 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 364.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 10,
        "Type": "JsonReaderException",
        "Message": "Could not convert string to DateTime: 2020-09-31. Path 'data.items[0].readings[0].effectiveDate', line 1, position 606.",
        "LogDate": "6/27/2021 1:46:44 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonReaderException: Could not convert string to DateTime: 2020-09-31. Path 'data.items[0].readings[0].effectiveDate', line 1, position 606.\r\n   at Newtonsoft.Json.JsonReader.ReadDateTimeString(String s)\r\n   at Newtonsoft.Json.JsonTextReader.FinishReadQuotedStringValue(ReadType readType)\r\n   at Newtonsoft.Json.JsonTextReader.ReadStringValue(ReadType readType)\r\n   at Newtonsoft.Json.JsonTextReader.ReadAsDateTime()\r\n   at Newtonsoft.Json.JsonReader.ReadForType(JsonContract contract, Boolean hasConverter)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetProperties(PropertyRequest propertyRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 84\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetProperties, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 11,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 1:52:22 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 12,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 1:52:25 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 13,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 5:23:20 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 101\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 14,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 5:23:23 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 15,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 5:23:27 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 16,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 5:23:31 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 17,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 5:23:37 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 18,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 5:24:18 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 19,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 5:24:20 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 20,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 5:24:28 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 21,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 5:24:32 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 22,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 5:25:23 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 23,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 5:25:26 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 24,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 5:25:29 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 25,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 5:25:33 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 26,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 5:25:37 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 27,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 5:25:48 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 28,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 5:27:11 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 29,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 5:44:08 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 30,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 5:44:11 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 31,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 5:46:37 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 32,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 5:46:37 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 33,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 5:58:27 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 34,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 5:58:30 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 35,
        "Type": "JsonReaderException",
        "Message": "Could not convert string to DateTime: 2021-09-31. Path 'data.items[48].readings[0].effectiveDate', line 1, position 71051.",
        "LogDate": "6/27/2021 6:14:35 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonReaderException: Could not convert string to DateTime: 2021-09-31. Path 'data.items[48].readings[0].effectiveDate', line 1, position 71051.\r\n   at Newtonsoft.Json.JsonReader.ReadDateTimeString(String s)\r\n   at Newtonsoft.Json.JsonTextReader.FinishReadQuotedStringValue(ReadType readType)\r\n   at Newtonsoft.Json.JsonTextReader.ReadStringValue(ReadType readType)\r\n   at Newtonsoft.Json.JsonTextReader.ReadAsDateTime()\r\n   at Newtonsoft.Json.JsonReader.ReadForType(JsonContract contract, Boolean hasConverter)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetProperties(PropertyRequest propertyRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 84\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetProperties, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 36,
        "Type": "JsonReaderException",
        "Message": "Could not convert string to DateTime: 2021-09-31. Path 'data.items[4].readings[0].effectiveDate', line 1, position 6114.",
        "LogDate": "6/27/2021 6:14:36 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonReaderException: Could not convert string to DateTime: 2021-09-31. Path 'data.items[4].readings[0].effectiveDate', line 1, position 6114.\r\n   at Newtonsoft.Json.JsonReader.ReadDateTimeString(String s)\r\n   at Newtonsoft.Json.JsonTextReader.FinishReadQuotedStringValue(ReadType readType)\r\n   at Newtonsoft.Json.JsonTextReader.ReadStringValue(ReadType readType)\r\n   at Newtonsoft.Json.JsonTextReader.ReadAsDateTime()\r\n   at Newtonsoft.Json.JsonReader.ReadForType(JsonContract contract, Boolean hasConverter)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetProperties(PropertyRequest propertyRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 84\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetProperties, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 37,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 6:16:02 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 38,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 6:16:02 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 39,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 6:16:28 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 40,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 6:17:04 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 41,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 6:17:05 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 42,
        "Type": "JsonReaderException",
        "Message": "Could not convert string to DateTime: 2021-04-31. Path 'data.items[5].readings[3].taskDate', line 1, position 8473.",
        "LogDate": "6/27/2021 6:21:38 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonReaderException: Could not convert string to DateTime: 2021-04-31. Path 'data.items[5].readings[3].taskDate', line 1, position 8473.\r\n   at Newtonsoft.Json.JsonReader.ReadDateTimeString(String s)\r\n   at Newtonsoft.Json.JsonTextReader.FinishReadQuotedStringValue(ReadType readType)\r\n   at Newtonsoft.Json.JsonTextReader.ReadStringValue(ReadType readType)\r\n   at Newtonsoft.Json.JsonTextReader.ReadAsDateTime()\r\n   at Newtonsoft.Json.JsonReader.ReadForType(JsonContract contract, Boolean hasConverter)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetProperties(PropertyRequest propertyRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 84\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetProperties, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 43,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 6:35:54 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 44,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 6:35:59 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 45,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 6:37:09 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 46,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 6:37:11 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 47,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 6:37:24 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 48,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 6:37:25 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 49,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 6:38:29 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 50,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 6:38:31 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 51,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 6:38:53 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 52,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 6:40:27 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 53,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 6:43:10 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 54,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 6:43:12 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 55,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 6:44:35 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 56,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 6:44:37 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 57,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 7:00:21 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 58,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 7:00:23 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 59,
        "Type": "JsonSerializationException",
        "Message": "Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.",
        "LogDate": "6/27/2021 7:00:31 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonSerializationException: Error converting value 588566 to type 'TEHA.Portal.Data.Models.Common.Flat'. Path 'data.items[1]', line 1, position 343.\r\n ---> System.ArgumentException: Could not cast or convert from System.Int64 to TEHA.Portal.Data.Models.Common.Flat.\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(Object value, Type initialType, Type targetType)\r\n   at Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(Object initialValue, CultureInfo culture, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 60,
        "Type": "JsonReaderException",
        "Message": "Could not convert string to DateTime: 2021-09-31. Path 'data.items[4].readings[0].effectiveDate', line 1, position 6114.",
        "LogDate": "6/27/2021 8:58:23 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonReaderException: Could not convert string to DateTime: 2021-09-31. Path 'data.items[4].readings[0].effectiveDate', line 1, position 6114.\r\n   at Newtonsoft.Json.JsonReader.ReadDateTimeString(String s)\r\n   at Newtonsoft.Json.JsonTextReader.FinishReadQuotedStringValue(ReadType readType)\r\n   at Newtonsoft.Json.JsonTextReader.ReadStringValue(ReadType readType)\r\n   at Newtonsoft.Json.JsonTextReader.ReadAsDateTime()\r\n   at Newtonsoft.Json.JsonReader.ReadForType(JsonContract contract, Boolean hasConverter)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetProperties(PropertyRequest propertyRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 84\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetProperties, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 61,
        "Type": "JsonReaderException",
        "Message": "Could not convert string to DateTime: 2020-09-31. Path 'data.items[6].readings[0].effectiveDate', line 1, position 12157.",
        "LogDate": "6/27/2021 9:40:48 PM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonReaderException: Could not convert string to DateTime: 2020-09-31. Path 'data.items[6].readings[0].effectiveDate', line 1, position 12157.\r\n   at Newtonsoft.Json.JsonReader.ReadDateTimeString(String s)\r\n   at Newtonsoft.Json.JsonTextReader.FinishReadQuotedStringValue(ReadType readType)\r\n   at Newtonsoft.Json.JsonTextReader.ReadStringValue(ReadType readType)\r\n   at Newtonsoft.Json.JsonTextReader.ReadAsDateTime()\r\n   at Newtonsoft.Json.JsonReader.ReadForType(JsonContract contract, Boolean hasConverter)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetProperties(PropertyRequest propertyRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 84\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetProperties, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 62,
        "Type": "JsonReaderException",
        "Message": "Could not convert string to DateTime: 2021-06-31. Path 'data.items[8].readings[0].effectiveDate', line 1, position 13203.",
        "LogDate": "6/28/2021 9:37:56 AM",
        "ProcessName": "API",
        "StackTrace": "Newtonsoft.Json.JsonReaderException: Could not convert string to DateTime: 2021-06-31. Path 'data.items[8].readings[0].effectiveDate', line 1, position 13203.\r\n   at Newtonsoft.Json.JsonReader.ReadDateTimeString(String s)\r\n   at Newtonsoft.Json.JsonTextReader.FinishReadQuotedStringValue(ReadType readType)\r\n   at Newtonsoft.Json.JsonTextReader.ReadStringValue(ReadType readType)\r\n   at Newtonsoft.Json.JsonTextReader.ReadAsDateTime()\r\n   at Newtonsoft.Json.JsonReader.ReadForType(JsonContract contract, Boolean hasConverter)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value)\r\n   at TEHA.Portal.API.Helpers.ApiResponse.Result[T](ControllerBase controller, HttpResponseMessage response) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\ApiResponse.cs:line 145\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetProperties(PropertyRequest propertyRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 84\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetProperties, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 63,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/28/2021 3:21:45 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.StockOverview.StockOverviewClient.GetSummary(String token, Int32 userId) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\StockOverview\\StockOverviewClient.cs:line 43\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetSummary(Int32 userId) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 47\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetSummary, Referral = , ActionParameters = ?userId=29647, M = GET }"
      },
      {
        "Id": 64,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/28/2021 3:21:49 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Post(String url, Object body, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 94\r\n   at TEHA.Portal.ProxyAPI.Clients.StockOverview.StockOverviewClient.GetProperties(String token, PropertyRequest propertyRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\StockOverview\\StockOverviewClient.cs:line 69\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetProperties(PropertyRequest propertyRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 84\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetProperties, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 65,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/28/2021 3:21:54 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.StockOverview.StockOverviewClient.GetSummary(String token, Int32 userId) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\StockOverview\\StockOverviewClient.cs:line 43\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetSummary(Int32 userId) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 47\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetSummary, Referral = , ActionParameters = ?userId=29647, M = GET }"
      },
      {
        "Id": 66,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/28/2021 3:22:04 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.StockOverview.StockOverviewClient.GetSummary(String token, Int32 userId) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\StockOverview\\StockOverviewClient.cs:line 43\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetSummary(Int32 userId) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 47\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetSummary, Referral = , ActionParameters = ?userId=28884, M = GET }"
      },
      {
        "Id": 67,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 12:16:36 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.Accounting.AccountingClient.GetSummaryAndReleaseInfo(String token, Int32 userId, Int32 propertyId, Int32 year) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Accounting\\AccountingClient.cs:line 177\r\n   at TEHA.Portal.API.Controllers.AccountingController.GetSummaryAndReleaseInfo(Int32 userId, Int32 propertyId, Int32 payrollYear) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountingController.cs:line 225\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/Accounting/GetSummaryAndReleaseInfo, Referral = , ActionParameters = ?userId=28884&propertyId=75853&payrollYear=194885, M = GET }"
      },
      {
        "Id": 68,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 12:27:44 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Post(String url, Object body, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 94\r\n   at TEHA.Portal.ProxyAPI.Clients.StockOverview.StockOverviewClient.GetFlats(String token, FlatRequest flatrequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\StockOverview\\StockOverviewClient.cs:line 80\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 69,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 12:30:10 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Post(String url, Object body, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 94\r\n   at TEHA.Portal.ProxyAPI.Clients.StockOverview.StockOverviewClient.GetProperties(String token, PropertyRequest propertyRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\StockOverview\\StockOverviewClient.cs:line 69\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetProperties(PropertyRequest propertyRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 84\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetProperties, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 70,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 12:31:14 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.StockOverview.StockOverviewClient.GetAllMeters(String token, Int32 userId, Int32 propertyId) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\StockOverview\\StockOverviewClient.cs:line 58\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetAllMeters(Int32 userId, Int32 propertyId) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 120\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetAllMeters, Referral = , ActionParameters = ?userId=28376&propertyId=39539, M = GET }"
      },
      {
        "Id": 71,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 12:31:34 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.StockOverview.StockOverviewClient.GetAllMeters(String token, Int32 userId, Int32 propertyId) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\StockOverview\\StockOverviewClient.cs:line 58\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetAllMeters(Int32 userId, Int32 propertyId) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 120\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetAllMeters, Referral = , ActionParameters = ?userId=28376&propertyId=39539, M = GET }"
      },
      {
        "Id": 72,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 12:32:28 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.StockOverview.StockOverviewClient.GetSummary(String token, Int32 userId) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\StockOverview\\StockOverviewClient.cs:line 43\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetSummary(Int32 userId) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 47\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetSummary, Referral = , ActionParameters = ?userId=28376, M = GET }"
      },
      {
        "Id": 73,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 12:33:31 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.StockOverview.StockOverviewClient.GetAllMeters(String token, Int32 userId, Int32 propertyId) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\StockOverview\\StockOverviewClient.cs:line 58\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetAllMeters(Int32 userId, Int32 propertyId) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 120\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetAllMeters, Referral = , ActionParameters = ?userId=28376&propertyId=39450, M = GET }"
      },
      {
        "Id": 74,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 12:36:01 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Post(String url, Object body, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 94\r\n   at TEHA.Portal.ProxyAPI.Clients.StockOverview.StockOverviewClient.GetFlats(String token, FlatRequest flatrequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\StockOverview\\StockOverviewClient.cs:line 80\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetFlats(FlatRequest flatRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 102\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetFlats, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 75,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 12:36:59 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.Account.AccountClient.Detail(String token, Int32 id) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Account\\AccountClient.cs:line 77\r\n   at TEHA.Portal.API.Controllers.AccountController.GetProfileDetail(Int32 id) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountController.cs:line 82\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/Account/Detail, Referral = , ActionParameters = ?id=28376, M = GET }"
      },
      {
        "Id": 76,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 12:37:36 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Post(String url, Object body, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 94\r\n   at TEHA.Portal.ProxyAPI.Clients.Document.DocumentClient.GetDocuments(String token, GetDocumentsRequest body) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Document\\DocumentClient.cs:line 38\r\n   at TEHA.Portal.API.Controllers.DocumentArchivesController.GetDocuments(GetDocumentsRequest body) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\DocumentArchivesController.cs:line 49\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/DocumentArchives/GetDocuments, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 77,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 12:39:19 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.Document.DocumentClient.GetInvoices(String token, Int32 userId, Nullable`1 propertyId, Nullable`1 payrollYear) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Document\\DocumentClient.cs:line 128\r\n   at TEHA.Portal.API.Controllers.DocumentArchivesController.GetInvoices(Int32 userId, Nullable`1 propertyId, Nullable`1 payrollYear) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\DocumentArchivesController.cs:line 127\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/DocumentArchives/GetInvoices, Referral = , ActionParameters = ?userId=28376&propertyId=39539, M = GET }"
      },
      {
        "Id": 78,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 12:40:15 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Post(String url, Object body, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 94\r\n   at TEHA.Portal.ProxyAPI.Clients.StockOverview.StockOverviewClient.GetProperties(String token, PropertyRequest propertyRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\StockOverview\\StockOverviewClient.cs:line 69\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetProperties(PropertyRequest propertyRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 84\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetProperties, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 79,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 12:41:31 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.Accounting.AccountingClient.GetFlatUsers(String token, Int32 userId, Int32 propertyId, Int32 year) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Accounting\\AccountingClient.cs:line 62\r\n   at TEHA.Portal.API.Controllers.AccountingController.GetFlatUsers(Int32 userId, Int32 propertyId, Int32 payrollYear) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountingController.cs:line 94\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/Accounting/GetFlatUsers, Referral = , ActionParameters = ?userId=29022&propertyId=85556&payrollYear=217824, M = GET }"
      },
      {
        "Id": 80,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 12:45:01 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.Accounting.AccountingClient.GetSummaryAndReleaseInfo(String token, Int32 userId, Int32 propertyId, Int32 year) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Accounting\\AccountingClient.cs:line 177\r\n   at TEHA.Portal.API.Controllers.AccountingController.GetSummaryAndReleaseInfo(Int32 userId, Int32 propertyId, Int32 payrollYear) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountingController.cs:line 225\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/Accounting/GetSummaryAndReleaseInfo, Referral = , ActionParameters = ?userId=28376&propertyId=39539&payrollYear=199768, M = GET }"
      },
      {
        "Id": 81,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 12:50:02 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.Accounting.AccountingClient.GetSummaryAndReleaseInfo(String token, Int32 userId, Int32 propertyId, Int32 year) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Accounting\\AccountingClient.cs:line 177\r\n   at TEHA.Portal.API.Controllers.AccountingController.GetSummaryAndReleaseInfo(Int32 userId, Int32 propertyId, Int32 payrollYear) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountingController.cs:line 225\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/Accounting/GetSummaryAndReleaseInfo, Referral = , ActionParameters = ?userId=28376&propertyId=39539&payrollYear=199768, M = GET }"
      },
      {
        "Id": 82,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 12:52:24 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.Accounting.AccountingClient.GetSummaryAndReleaseInfo(String token, Int32 userId, Int32 propertyId, Int32 year) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Accounting\\AccountingClient.cs:line 177\r\n   at TEHA.Portal.API.Controllers.AccountingController.GetSummaryAndReleaseInfo(Int32 userId, Int32 propertyId, Int32 payrollYear) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountingController.cs:line 225\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/Accounting/GetSummaryAndReleaseInfo, Referral = , ActionParameters = ?userId=28376&propertyId=39539&payrollYear=199768, M = GET }"
      },
      {
        "Id": 83,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 12:54:27 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.Accounting.AccountingClient.GetSummaryAndReleaseInfo(String token, Int32 userId, Int32 propertyId, Int32 year) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Accounting\\AccountingClient.cs:line 177\r\n   at TEHA.Portal.API.Controllers.AccountingController.GetSummaryAndReleaseInfo(Int32 userId, Int32 propertyId, Int32 payrollYear) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountingController.cs:line 225\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/Accounting/GetSummaryAndReleaseInfo, Referral = , ActionParameters = ?userId=29022&propertyId=50792&payrollYear=211368, M = GET }"
      },
      {
        "Id": 84,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 12:57:12 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.Accounting.AccountingClient.GetSummaryAndReleaseInfo(String token, Int32 userId, Int32 propertyId, Int32 year) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Accounting\\AccountingClient.cs:line 177\r\n   at TEHA.Portal.API.Controllers.AccountingController.GetSummaryAndReleaseInfo(Int32 userId, Int32 propertyId, Int32 payrollYear) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountingController.cs:line 225\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/Accounting/GetSummaryAndReleaseInfo, Referral = , ActionParameters = ?userId=28376&propertyId=39539&payrollYear=199768, M = GET }"
      },
      {
        "Id": 85,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 12:57:47 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.Info.InfoClient.GetPayrollYear(String token, Int32 userId, Int32 propertyId) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Info\\InfoClient.cs:line 57\r\n   at TEHA.Portal.API.Controllers.InfoController.GetPayrollYear(Int32 userId, Int32 propertyId) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\InfoController.cs:line 64\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/Info/GetPayRollYear, Referral = , ActionParameters = ?userId=28376&propertyId=39539, M = GET }"
      },
      {
        "Id": 86,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 12:58:26 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.Accounting.AccountingClient.GetFlatUsers(String token, Int32 userId, Int32 propertyId, Int32 year) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Accounting\\AccountingClient.cs:line 62\r\n   at TEHA.Portal.API.Controllers.AccountingController.GetFlatUsers(Int32 userId, Int32 propertyId, Int32 payrollYear) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountingController.cs:line 94\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/Accounting/GetFlatUsers, Referral = , ActionParameters = ?userId=28376&propertyId=39539&payrollYear=199768, M = GET }"
      },
      {
        "Id": 87,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 12:58:42 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Post(String url, Object body, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 94\r\n   at TEHA.Portal.ProxyAPI.Clients.Document.DocumentClient.GetDocuments(String token, GetDocumentsRequest body) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Document\\DocumentClient.cs:line 38\r\n   at TEHA.Portal.API.Controllers.DocumentArchivesController.GetDocuments(GetDocumentsRequest body) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\DocumentArchivesController.cs:line 49\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/DocumentArchives/GetDocuments, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 88,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 12:59:49 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.Accounting.AccountingClient.GetCosts(String token, Int32 userId, Int32 propertyId, Int32 year) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Accounting\\AccountingClient.cs:line 45\r\n   at TEHA.Portal.API.Controllers.AccountingController.GetCosts(Int32 userId, Int32 propertyId, Int32 payrollYear) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountingController.cs:line 73\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/Accounting/GetCosts, Referral = , ActionParameters = ?userId=29022&propertyId=50792&payrollYear=211368, M = GET }"
      },
      {
        "Id": 89,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 1:00:47 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.Document.DocumentClient.GetInvoices(String token, Int32 userId, Nullable`1 propertyId, Nullable`1 payrollYear) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Document\\DocumentClient.cs:line 128\r\n   at TEHA.Portal.API.Controllers.DocumentArchivesController.GetInvoices(Int32 userId, Nullable`1 propertyId, Nullable`1 payrollYear) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\DocumentArchivesController.cs:line 127\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/DocumentArchives/GetInvoices, Referral = , ActionParameters = ?userId=28376&propertyId=39539, M = GET }"
      },
      {
        "Id": 90,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 1:03:22 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.Accounting.AccountingClient.GetFlatUsers(String token, Int32 userId, Int32 propertyId, Int32 year) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Accounting\\AccountingClient.cs:line 62\r\n   at TEHA.Portal.API.Controllers.AccountingController.GetFlatUsers(Int32 userId, Int32 propertyId, Int32 payrollYear) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountingController.cs:line 94\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/Accounting/GetFlatUsers, Referral = , ActionParameters = ?userId=28376&propertyId=39539&payrollYear=199768, M = GET }"
      },
      {
        "Id": 91,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 3:13:56 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.Account.AccountClient.GetUserContactInformation(String token, Int32 userId) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Account\\AccountClient.cs:line 49\r\n   at TEHA.Portal.API.Controllers.AccountController.GetUserContactInformation(Int32 userId) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountController.cs:line 65\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/Account/GetUserContactInformation, Referral = , ActionParameters = ?userId=28376, M = GET }"
      },
      {
        "Id": 92,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 6:09:17 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Post(String url, Object body, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 94\r\n   at TEHA.Portal.ProxyAPI.Clients.Document.DocumentClient.GetDocuments(String token, GetDocumentsRequest body) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Document\\DocumentClient.cs:line 38\r\n   at TEHA.Portal.API.Controllers.DocumentArchivesController.GetDocuments(GetDocumentsRequest body) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\DocumentArchivesController.cs:line 49\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/DocumentArchives/GetDocuments, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 93,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 6:25:23 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Post(String url, Object body, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 94\r\n   at TEHA.Portal.ProxyAPI.Clients.Accounting.AccountingClient.GetAccountingPeriods(String token, AccountingRequest accountingRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Accounting\\AccountingClient.cs:line 199\r\n   at TEHA.Portal.API.Controllers.AccountingController.GetAccountingPeriods(AccountingRequest accountingRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountingController.cs:line 54\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /API/Accounting/GetAccountingPeriods, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 94,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 6:25:41 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.Account.AccountClient.GetUserContactInformation(String token, Int32 userId) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Account\\AccountClient.cs:line 49\r\n   at TEHA.Portal.API.Controllers.AccountController.GetUserContactInformation(Int32 userId) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountController.cs:line 65\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/Account/GetUserContactInformation, Referral = , ActionParameters = ?userId=28376, M = GET }"
      },
      {
        "Id": 95,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 6:26:42 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Post(String url, Object body, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 94\r\n   at TEHA.Portal.ProxyAPI.Clients.StockOverview.StockOverviewClient.GetProperties(String token, PropertyRequest propertyRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\StockOverview\\StockOverviewClient.cs:line 69\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetProperties(PropertyRequest propertyRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 84\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetProperties, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 96,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 6:27:04 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.Account.AccountClient.Detail(String token, Int32 id) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Account\\AccountClient.cs:line 77\r\n   at TEHA.Portal.API.Controllers.AccountController.GetProfileDetail(Int32 id) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountController.cs:line 82\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/Account/Detail, Referral = , ActionParameters = ?id=28376, M = GET }"
      },
      {
        "Id": 97,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 6:27:49 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.Accounting.AccountingClient.GetFlatUsers(String token, Int32 userId, Int32 propertyId, Int32 year) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Accounting\\AccountingClient.cs:line 62\r\n   at TEHA.Portal.API.Controllers.AccountingController.GetFlatUsers(Int32 userId, Int32 propertyId, Int32 payrollYear) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountingController.cs:line 94\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/Accounting/GetFlatUsers, Referral = , ActionParameters = ?userId=29022&propertyId=50792&payrollYear=211368, M = GET }"
      },
      {
        "Id": 98,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 6:46:04 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Post(String url, Object body, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 94\r\n   at TEHA.Portal.ProxyAPI.Clients.Accounting.AccountingClient.GetAccountingPeriods(String token, AccountingRequest accountingRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Accounting\\AccountingClient.cs:line 199\r\n   at TEHA.Portal.API.Controllers.AccountingController.GetAccountingPeriods(AccountingRequest accountingRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountingController.cs:line 54\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /API/Accounting/GetAccountingPeriods, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 99,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 6:46:21 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.Dashboard.DashboardClient.Get(String token, Int32 userId) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Dashboard\\DashboardClient.cs:line 40\r\n   at TEHA.Portal.API.Controllers.DashboardController.Get(Int32 userId) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\DashboardController.cs:line 44\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/Dashboard/Get, Referral = , ActionParameters = ?userId=28376, M = GET }"
      },
      {
        "Id": 100,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 6:47:33 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Post(String url, Object body, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 94\r\n   at TEHA.Portal.ProxyAPI.Clients.StockOverview.StockOverviewClient.GetProperties(String token, PropertyRequest propertyRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\StockOverview\\StockOverviewClient.cs:line 69\r\n   at TEHA.Portal.API.Controllers.StockOverviewController.GetProperties(PropertyRequest propertyRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\StockOverviewController.cs:line 84\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/StockOverview/GetProperties, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 101,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 6:49:00 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.Accounting.AccountingClient.GetLastUpdatedDate(String token, Int32 userId, Int32 propertyId, Int32 year) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Accounting\\AccountingClient.cs:line 160\r\n   at TEHA.Portal.API.Controllers.AccountingController.GetLastUpdatedDates(Int32 userId, Int32 propertyId, Int32 payrollYear) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountingController.cs:line 210\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/Accounting/GetLastUpdatedDates, Referral = , ActionParameters = ?userId=29022&propertyId=85556&payrollYear=217824, M = GET }"
      },
      {
        "Id": 102,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 6:49:47 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.Dashboard.DashboardClient.Get(String token, Int32 userId) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Dashboard\\DashboardClient.cs:line 40\r\n   at TEHA.Portal.API.Controllers.DashboardController.Get(Int32 userId) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\DashboardController.cs:line 44\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/Dashboard/Get, Referral = , ActionParameters = ?userId=28376, M = GET }"
      },
      {
        "Id": 103,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 6:51:25 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Post(String url, Object body, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 94\r\n   at TEHA.Portal.ProxyAPI.Clients.Accounting.AccountingClient.GetAccountingPeriods(String token, AccountingRequest accountingRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Accounting\\AccountingClient.cs:line 199\r\n   at TEHA.Portal.API.Controllers.AccountingController.GetAccountingPeriods(AccountingRequest accountingRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountingController.cs:line 54\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /API/Accounting/GetAccountingPeriods, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 104,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 6:52:37 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Post(String url, Object body, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 94\r\n   at TEHA.Portal.ProxyAPI.Clients.Accounting.AccountingClient.GetAccountingPeriods(String token, AccountingRequest accountingRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Accounting\\AccountingClient.cs:line 199\r\n   at TEHA.Portal.API.Controllers.AccountingController.GetAccountingPeriods(AccountingRequest accountingRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountingController.cs:line 54\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /API/Accounting/GetAccountingPeriods, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 105,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 6:53:51 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.Accounting.AccountingClient.GetLastUpdatedDate(String token, Int32 userId, Int32 propertyId, Int32 year) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Accounting\\AccountingClient.cs:line 160\r\n   at TEHA.Portal.API.Controllers.AccountingController.GetLastUpdatedDates(Int32 userId, Int32 propertyId, Int32 payrollYear) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountingController.cs:line 210\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/Accounting/GetLastUpdatedDates, Referral = , ActionParameters = ?userId=29022&propertyId=85556&payrollYear=217824, M = GET }"
      },
      {
        "Id": 106,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 6:54:48 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.Accounting.AccountingClient.GetFlatUsers(String token, Int32 userId, Int32 propertyId, Int32 year) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Accounting\\AccountingClient.cs:line 62\r\n   at TEHA.Portal.API.Controllers.AccountingController.GetFlatUsers(Int32 userId, Int32 propertyId, Int32 payrollYear) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountingController.cs:line 94\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/Accounting/GetFlatUsers, Referral = , ActionParameters = ?userId=29022&propertyId=85556&payrollYear=217824, M = GET }"
      },
      {
        "Id": 107,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 6:56:27 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Post(String url, Object body, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 94\r\n   at TEHA.Portal.ProxyAPI.Clients.Accounting.AccountingClient.GetAccountingPeriods(String token, AccountingRequest accountingRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Accounting\\AccountingClient.cs:line 199\r\n   at TEHA.Portal.API.Controllers.AccountingController.GetAccountingPeriods(AccountingRequest accountingRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountingController.cs:line 54\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /API/Accounting/GetAccountingPeriods, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 108,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 6:58:39 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.Accounting.AccountingClient.GetSummaryAndReleaseInfo(String token, Int32 userId, Int32 propertyId, Int32 year) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Accounting\\AccountingClient.cs:line 177\r\n   at TEHA.Portal.API.Controllers.AccountingController.GetSummaryAndReleaseInfo(Int32 userId, Int32 propertyId, Int32 payrollYear) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountingController.cs:line 225\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/Accounting/GetSummaryAndReleaseInfo, Referral = , ActionParameters = ?userId=29022&propertyId=50792&payrollYear=200211, M = GET }"
      },
      {
        "Id": 109,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 7:03:32 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.Accounting.AccountingClient.GetSummaryAndReleaseInfo(String token, Int32 userId, Int32 propertyId, Int32 year) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Accounting\\AccountingClient.cs:line 177\r\n   at TEHA.Portal.API.Controllers.AccountingController.GetSummaryAndReleaseInfo(Int32 userId, Int32 propertyId, Int32 payrollYear) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountingController.cs:line 225\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/Accounting/GetSummaryAndReleaseInfo, Referral = , ActionParameters = ?userId=29022&propertyId=50792&payrollYear=211368, M = GET }"
      },
      {
        "Id": 110,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 7:49:02 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Post(String url, Object body, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 94\r\n   at TEHA.Portal.ProxyAPI.Clients.Accounting.AccountingClient.GetAccountingPeriods(String token, AccountingRequest accountingRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Accounting\\AccountingClient.cs:line 199\r\n   at TEHA.Portal.API.Controllers.AccountingController.GetAccountingPeriods(AccountingRequest accountingRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountingController.cs:line 54\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /API/Accounting/GetAccountingPeriods, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 111,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/29/2021 7:49:38 PM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Post(String url, Object body, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 94\r\n   at TEHA.Portal.ProxyAPI.Clients.Accounting.AccountingClient.GetAccountingPeriods(String token, AccountingRequest accountingRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Accounting\\AccountingClient.cs:line 199\r\n   at TEHA.Portal.API.Controllers.AccountingController.GetAccountingPeriods(AccountingRequest accountingRequest) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\AccountingController.cs:line 54\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /API/Accounting/GetAccountingPeriods, Referral = , ActionParameters = , M = POST }"
      },
      {
        "Id": 112,
        "Type": "HttpRequestException",
        "Message": "A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.",
        "LogDate": "6/30/2021 7:07:21 AM",
        "ProcessName": "API",
        "StackTrace": "System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at TEHA.Portal.ProxyAPI.RestClient.Get(String url, Dictionary`2 parameters, String token) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\RestClient.cs:line 54\r\n   at TEHA.Portal.ProxyAPI.Clients.Dashboard.DashboardClient.Get(String token, Int32 userId) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.ProxyAPI\\Clients\\Dashboard\\DashboardClient.cs:line 40\r\n   at TEHA.Portal.API.Controllers.DashboardController.Get(Int32 userId) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Controllers\\DashboardController.cs:line 44\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at TEHA.Portal.API.Helpers.JwtMiddleware.Invoke(HttpContext context) in C:\\Users\\ALI OWN\\Documents\\Current Project SSD\\TEHA\\teha-portal-api\\TEHA.Portal.API\\Helpers\\JwtMiddleware.cs:line 50\r\n   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)\r\n   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)",
        "ErrorData": "{ Url = /api/Dashboard/Get, Referral = , ActionParameters = ?userId=28376, M = GET }"
      }
    ]
  },
  "Information": {
    "type": "Information",
    "items": []
  },
  "UserSetting": {
    "type": "UserSetting",
    "items": [
      {
        "Id": 0,
        "Type": "UserSetting",
        "Language": "en",
        "GridSize": 10,
        "UserId": 28376
      },
      {
        "Id": 1,
        "Type": "UserSetting",
        "Language": "de",
        "GridSize": 50,
        "UserId": 29022
      },
      {
        "Id": 2,
        "Type": "UserSetting",
        "Language": "de",
        "GridSize": 25,
        "UserId": 29647
      },
      {
        "Id": 3,
        "Type": "UserSetting",
        "Language": "de",
        "GridSize": null,
        "UserId": 47174
      },
      {
        "Id": 4,
        "Type": "UserSetting",
        "Language": "en",
        "GridSize": 50,
        "UserId": 28884
      },
      {
        "Id": 5,
        "Type": "UserSetting",
        "Language": "de",
        "GridSize": 50,
        "UserId": 28700
      }
    ]
  }
}